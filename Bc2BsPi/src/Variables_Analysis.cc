#include "Variables_Analysis.h"

Bc2BsPi::Variables_Analysis::Variables_Analysis(){}
Bc2BsPi::Variables_Analysis::~Variables_Analysis(){}

// Choose variables to read in (the fewer we read the quicker the code goes)
void Bc2BsPi::Variables_Analysis::setInputBranches(TTree *tree) {

  // defined by us in prevous iteration
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_X"                   , &B_c_B_s0_VTX_DIFF_X                     );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_Y"                   , &B_c_B_s0_VTX_DIFF_Y                     );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_XY"                  , &B_c_B_s0_VTX_DIFF_XY                    );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_Z"                   , &B_c_B_s0_VTX_DIFF_Z                     );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_R"                   , &B_c_B_s0_VTX_DIFF_R                     );

  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_XERR"                , &B_c_B_s0_VTX_DIFF_XERR                  );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_YERR"                , &B_c_B_s0_VTX_DIFF_YERR                  );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_ZERR"                , &B_c_B_s0_VTX_DIFF_ZERR                  );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_XYERR"               , &B_c_B_s0_VTX_DIFF_XYERR                 );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_RERR"                , &B_c_B_s0_VTX_DIFF_RERR                  );

  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_XFRACERR"            , &B_c_B_s0_VTX_DIFF_XFRACERR              );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_YFRACERR"            , &B_c_B_s0_VTX_DIFF_YFRACERR              );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_ZFRACERR"            , &B_c_B_s0_VTX_DIFF_ZFRACERR              );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_XYFRACERR"           , &B_c_B_s0_VTX_DIFF_XYFRACERR             );
  tree->SetBranchAddress("B_c_B_s0_VTX_DIFF_RFRACERR"            , &B_c_B_s0_VTX_DIFF_RFRACERR              );

  // standard variables carried through from before
  tree->SetBranchAddress("B_c_MINIP"                             , &B_c_MINIP                               );
  tree->SetBranchAddress("B_c_MINIPCHI2"                         , &B_c_MINIPCHI2                           );
  tree->SetBranchAddress("nPV"                                   , &nPV                                     );
  tree->SetBranchAddress("B_c_ENDVERTEX_X"                       , &B_c_ENDVERTEX_X                         );
  tree->SetBranchAddress("B_c_ENDVERTEX_Y"                       , &B_c_ENDVERTEX_Y                         );
  tree->SetBranchAddress("B_c_ENDVERTEX_Z"                       , &B_c_ENDVERTEX_Z                         );
  tree->SetBranchAddress("B_c_ENDVERTEX_XERR"                    , &B_c_ENDVERTEX_XERR                      );
  tree->SetBranchAddress("B_c_ENDVERTEX_YERR"                    , &B_c_ENDVERTEX_YERR                      );
  tree->SetBranchAddress("B_c_ENDVERTEX_ZERR"                    , &B_c_ENDVERTEX_ZERR                      );
  tree->SetBranchAddress("B_c_ENDVERTEX_CHI2"                    , &B_c_ENDVERTEX_CHI2                      );
  tree->SetBranchAddress("B_c_ENDVERTEX_NDOF"                    , &B_c_ENDVERTEX_NDOF                      );
  tree->SetBranchAddress("B_c_OWNPV_X"                           , &B_c_OWNPV_X                             );
  tree->SetBranchAddress("B_c_OWNPV_Y"                           , &B_c_OWNPV_Y                             );
  tree->SetBranchAddress("B_c_OWNPV_Z"                           , &B_c_OWNPV_Z                             );
  tree->SetBranchAddress("B_c_OWNPV_XERR"                        , &B_c_OWNPV_XERR                          );
  tree->SetBranchAddress("B_c_OWNPV_YERR"                        , &B_c_OWNPV_YERR                          );
  tree->SetBranchAddress("B_c_OWNPV_ZERR"                        , &B_c_OWNPV_ZERR                          );
  tree->SetBranchAddress("B_c_OWNPV_CHI2"                        , &B_c_OWNPV_CHI2                          );
  tree->SetBranchAddress("B_c_OWNPV_NDOF"                        , &B_c_OWNPV_NDOF                          );
  tree->SetBranchAddress("B_c_IP_OWNPV"                          , &B_c_IP_OWNPV                            );
  tree->SetBranchAddress("B_c_IPCHI2_OWNPV"                      , &B_c_IPCHI2_OWNPV                        );
  tree->SetBranchAddress("B_c_FD_OWNPV"                          , &B_c_FD_OWNPV                            );
  tree->SetBranchAddress("B_c_FDCHI2_OWNPV"                      , &B_c_FDCHI2_OWNPV                        );
  tree->SetBranchAddress("B_c_DIRA_OWNPV"                        , &B_c_DIRA_OWNPV                          );
  tree->SetBranchAddress("B_c_P"                                 , &B_c_P                                   );
  tree->SetBranchAddress("B_c_PT"                                , &B_c_PT                                  );
  tree->SetBranchAddress("B_c_PE"                                , &B_c_PE                                  );
  tree->SetBranchAddress("B_c_PX"                                , &B_c_PX                                  );
  tree->SetBranchAddress("B_c_PY"                                , &B_c_PY                                  );
  tree->SetBranchAddress("B_c_PZ"                                , &B_c_PZ                                  );
  tree->SetBranchAddress("B_c_M"                                 , &B_c_M                                   );
  tree->SetBranchAddress("B_c_BKGCAT"                            , &B_c_BKGCAT                              );
  tree->SetBranchAddress("B_c_ID"                                , &B_c_ID                                  );
  tree->SetBranchAddress("B_c_BPVDIRA"                           , &B_c_BPVDIRA                             );
  tree->SetBranchAddress("B_c_BPVIPCHI2"                         , &B_c_BPVIPCHI2                           );
  tree->SetBranchAddress("B_c_BPVLTIME"                          , &B_c_BPVLTIME                            );
  tree->SetBranchAddress("B_c_BPVVDCHI2"                         , &B_c_BPVVDCHI2                           );
  tree->SetBranchAddress("B_c_BPVVDZ"                            , &B_c_BPVVDZ                              );
  tree->SetBranchAddress("B_c_ETA"                               , &B_c_ETA                                 );
  tree->SetBranchAddress("B_s0_MINIP"                            , &B_s0_MINIP                              );
  tree->SetBranchAddress("B_s0_MINIPCHI2"                        , &B_s0_MINIPCHI2                          );
  tree->SetBranchAddress("B_s0_CosTheta"                         , &B_s0_CosTheta                           );
  tree->SetBranchAddress("B_s0_ENDVERTEX_X"                      , &B_s0_ENDVERTEX_X                        );
  tree->SetBranchAddress("B_s0_ENDVERTEX_Y"                      , &B_s0_ENDVERTEX_Y                        );
  tree->SetBranchAddress("B_s0_ENDVERTEX_Z"                      , &B_s0_ENDVERTEX_Z                        );
  tree->SetBranchAddress("B_s0_ENDVERTEX_XERR"                   , &B_s0_ENDVERTEX_XERR                     );
  tree->SetBranchAddress("B_s0_ENDVERTEX_YERR"                   , &B_s0_ENDVERTEX_YERR                     );
  tree->SetBranchAddress("B_s0_ENDVERTEX_ZERR"                   , &B_s0_ENDVERTEX_ZERR                     );
  tree->SetBranchAddress("B_s0_ENDVERTEX_CHI2"                   , &B_s0_ENDVERTEX_CHI2                     );
  tree->SetBranchAddress("B_s0_ENDVERTEX_NDOF"                   , &B_s0_ENDVERTEX_NDOF                     );
  tree->SetBranchAddress("B_s0_OWNPV_X"                          , &B_s0_OWNPV_X                            );
  tree->SetBranchAddress("B_s0_OWNPV_Y"                          , &B_s0_OWNPV_Y                            );
  tree->SetBranchAddress("B_s0_OWNPV_Z"                          , &B_s0_OWNPV_Z                            );
  tree->SetBranchAddress("B_s0_OWNPV_XERR"                       , &B_s0_OWNPV_XERR                         );
  tree->SetBranchAddress("B_s0_OWNPV_YERR"                       , &B_s0_OWNPV_YERR                         );
  tree->SetBranchAddress("B_s0_OWNPV_ZERR"                       , &B_s0_OWNPV_ZERR                         );
  tree->SetBranchAddress("B_s0_OWNPV_CHI2"                       , &B_s0_OWNPV_CHI2                         );
  tree->SetBranchAddress("B_s0_OWNPV_NDOF"                       , &B_s0_OWNPV_NDOF                         );
  tree->SetBranchAddress("B_s0_IP_OWNPV"                         , &B_s0_IP_OWNPV                           );
  tree->SetBranchAddress("B_s0_IPCHI2_OWNPV"                     , &B_s0_IPCHI2_OWNPV                       );
  tree->SetBranchAddress("B_s0_FD_OWNPV"                         , &B_s0_FD_OWNPV                           );
  tree->SetBranchAddress("B_s0_FDCHI2_OWNPV"                     , &B_s0_FDCHI2_OWNPV                       );
  tree->SetBranchAddress("B_s0_DIRA_OWNPV"                       , &B_s0_DIRA_OWNPV                         );
  tree->SetBranchAddress("B_s0_ORIVX_X"                          , &B_s0_ORIVX_X                            );
  tree->SetBranchAddress("B_s0_ORIVX_Y"                          , &B_s0_ORIVX_Y                            );
  tree->SetBranchAddress("B_s0_ORIVX_Z"                          , &B_s0_ORIVX_Z                            );
  tree->SetBranchAddress("B_s0_ORIVX_XERR"                       , &B_s0_ORIVX_XERR                         );
  tree->SetBranchAddress("B_s0_ORIVX_YERR"                       , &B_s0_ORIVX_YERR                         );
  tree->SetBranchAddress("B_s0_ORIVX_ZERR"                       , &B_s0_ORIVX_ZERR                         );
  tree->SetBranchAddress("B_s0_ORIVX_CHI2"                       , &B_s0_ORIVX_CHI2                         );
  tree->SetBranchAddress("B_s0_ORIVX_NDOF"                       , &B_s0_ORIVX_NDOF                         );
  tree->SetBranchAddress("B_s0_FD_ORIVX"                         , &B_s0_FD_ORIVX                           );
  tree->SetBranchAddress("B_s0_FDCHI2_ORIVX"                     , &B_s0_FDCHI2_ORIVX                       );
  tree->SetBranchAddress("B_s0_DIRA_ORIVX"                       , &B_s0_DIRA_ORIVX                         );
  tree->SetBranchAddress("B_s0_P"                                , &B_s0_P                                  );
  tree->SetBranchAddress("B_s0_PT"                               , &B_s0_PT                                 );
  tree->SetBranchAddress("B_s0_PE"                               , &B_s0_PE                                 );
  tree->SetBranchAddress("B_s0_PX"                               , &B_s0_PX                                 );
  tree->SetBranchAddress("B_s0_PY"                               , &B_s0_PY                                 );
  tree->SetBranchAddress("B_s0_PZ"                               , &B_s0_PZ                                 );
  tree->SetBranchAddress("B_s0_M"                                , &B_s0_M                                  );
  tree->SetBranchAddress("B_s0_BKGCAT"                           , &B_s0_BKGCAT                             );
  tree->SetBranchAddress("B_s0_ID"                               , &B_s0_ID                                 );
  tree->SetBranchAddress("B_s0_BPVDIRA"                          , &B_s0_BPVDIRA                            );
  tree->SetBranchAddress("B_s0_BPVIPCHI2"                        , &B_s0_BPVIPCHI2                          );
  tree->SetBranchAddress("B_s0_BPVLTIME"                         , &B_s0_BPVLTIME                           );
  tree->SetBranchAddress("B_s0_BPVVDCHI2"                        , &B_s0_BPVVDCHI2                          );
  tree->SetBranchAddress("B_s0_BPVVDZ"                           , &B_s0_BPVVDZ                             );
  tree->SetBranchAddress("B_s0_ETA"                              , &B_s0_ETA                                );
  tree->SetBranchAddress("Jpsi_MINIP"                            , &Jpsi_MINIP                              );
  tree->SetBranchAddress("Jpsi_MINIPCHI2"                        , &Jpsi_MINIPCHI2                          );
  tree->SetBranchAddress("Jpsi_CosTheta"                         , &Jpsi_CosTheta                           );
  tree->SetBranchAddress("Jpsi_ENDVERTEX_X"                      , &Jpsi_ENDVERTEX_X                        );
  tree->SetBranchAddress("Jpsi_ENDVERTEX_Y"                      , &Jpsi_ENDVERTEX_Y                        );
  tree->SetBranchAddress("Jpsi_ENDVERTEX_Z"                      , &Jpsi_ENDVERTEX_Z                        );
  tree->SetBranchAddress("Jpsi_ENDVERTEX_XERR"                   , &Jpsi_ENDVERTEX_XERR                     );
  tree->SetBranchAddress("Jpsi_ENDVERTEX_YERR"                   , &Jpsi_ENDVERTEX_YERR                     );
  tree->SetBranchAddress("Jpsi_ENDVERTEX_ZERR"                   , &Jpsi_ENDVERTEX_ZERR                     );
  tree->SetBranchAddress("Jpsi_ENDVERTEX_CHI2"                   , &Jpsi_ENDVERTEX_CHI2                     );
  tree->SetBranchAddress("Jpsi_ENDVERTEX_NDOF"                   , &Jpsi_ENDVERTEX_NDOF                     );
  tree->SetBranchAddress("Jpsi_OWNPV_X"                          , &Jpsi_OWNPV_X                            );
  tree->SetBranchAddress("Jpsi_OWNPV_Y"                          , &Jpsi_OWNPV_Y                            );
  tree->SetBranchAddress("Jpsi_OWNPV_Z"                          , &Jpsi_OWNPV_Z                            );
  tree->SetBranchAddress("Jpsi_OWNPV_XERR"                       , &Jpsi_OWNPV_XERR                         );
  tree->SetBranchAddress("Jpsi_OWNPV_YERR"                       , &Jpsi_OWNPV_YERR                         );
  tree->SetBranchAddress("Jpsi_OWNPV_ZERR"                       , &Jpsi_OWNPV_ZERR                         );
  tree->SetBranchAddress("Jpsi_OWNPV_CHI2"                       , &Jpsi_OWNPV_CHI2                         );
  tree->SetBranchAddress("Jpsi_OWNPV_NDOF"                       , &Jpsi_OWNPV_NDOF                         );
  tree->SetBranchAddress("Jpsi_IP_OWNPV"                         , &Jpsi_IP_OWNPV                           );
  tree->SetBranchAddress("Jpsi_IPCHI2_OWNPV"                     , &Jpsi_IPCHI2_OWNPV                       );
  tree->SetBranchAddress("Jpsi_FD_OWNPV"                         , &Jpsi_FD_OWNPV                           );
  tree->SetBranchAddress("Jpsi_FDCHI2_OWNPV"                     , &Jpsi_FDCHI2_OWNPV                       );
  tree->SetBranchAddress("Jpsi_DIRA_OWNPV"                       , &Jpsi_DIRA_OWNPV                         );
  tree->SetBranchAddress("Jpsi_ORIVX_X"                          , &Jpsi_ORIVX_X                            );
  tree->SetBranchAddress("Jpsi_ORIVX_Y"                          , &Jpsi_ORIVX_Y                            );
  tree->SetBranchAddress("Jpsi_ORIVX_Z"                          , &Jpsi_ORIVX_Z                            );
  tree->SetBranchAddress("Jpsi_ORIVX_XERR"                       , &Jpsi_ORIVX_XERR                         );
  tree->SetBranchAddress("Jpsi_ORIVX_YERR"                       , &Jpsi_ORIVX_YERR                         );
  tree->SetBranchAddress("Jpsi_ORIVX_ZERR"                       , &Jpsi_ORIVX_ZERR                         );
  tree->SetBranchAddress("Jpsi_ORIVX_CHI2"                       , &Jpsi_ORIVX_CHI2                         );
  tree->SetBranchAddress("Jpsi_ORIVX_NDOF"                       , &Jpsi_ORIVX_NDOF                         );
  tree->SetBranchAddress("Jpsi_FD_ORIVX"                         , &Jpsi_FD_ORIVX                           );
  tree->SetBranchAddress("Jpsi_FDCHI2_ORIVX"                     , &Jpsi_FDCHI2_ORIVX                       );
  tree->SetBranchAddress("Jpsi_DIRA_ORIVX"                       , &Jpsi_DIRA_ORIVX                         );
  tree->SetBranchAddress("Jpsi_P"                                , &Jpsi_P                                  );
  tree->SetBranchAddress("Jpsi_PT"                               , &Jpsi_PT                                 );
  tree->SetBranchAddress("Jpsi_PE"                               , &Jpsi_PE                                 );
  tree->SetBranchAddress("Jpsi_PX"                               , &Jpsi_PX                                 );
  tree->SetBranchAddress("Jpsi_PY"                               , &Jpsi_PY                                 );
  tree->SetBranchAddress("Jpsi_PZ"                               , &Jpsi_PZ                                 );
  tree->SetBranchAddress("Jpsi_M"                                , &Jpsi_M                                  );
  tree->SetBranchAddress("Jpsi_BKGCAT"                           , &Jpsi_BKGCAT                             );
  tree->SetBranchAddress("Jpsi_ID"                               , &Jpsi_ID                                 );
  tree->SetBranchAddress("Jpsi_BPVDIRA"                          , &Jpsi_BPVDIRA                            );
  tree->SetBranchAddress("Jpsi_BPVIPCHI2"                        , &Jpsi_BPVIPCHI2                          );
  tree->SetBranchAddress("Jpsi_BPVLTIME"                         , &Jpsi_BPVLTIME                           );
  tree->SetBranchAddress("Jpsi_BPVVDCHI2"                        , &Jpsi_BPVVDCHI2                          );
  tree->SetBranchAddress("Jpsi_BPVVDZ"                           , &Jpsi_BPVVDZ                             );
  tree->SetBranchAddress("Jpsi_ETA"                              , &Jpsi_ETA                                );
  tree->SetBranchAddress("muplus_MINIP"                          , &muplus_MINIP                            );
  tree->SetBranchAddress("muplus_MINIPCHI2"                      , &muplus_MINIPCHI2                        );
  tree->SetBranchAddress("muplus_CosTheta"                       , &muplus_CosTheta                         );
  tree->SetBranchAddress("muplus_OWNPV_X"                        , &muplus_OWNPV_X                          );
  tree->SetBranchAddress("muplus_OWNPV_Y"                        , &muplus_OWNPV_Y                          );
  tree->SetBranchAddress("muplus_OWNPV_Z"                        , &muplus_OWNPV_Z                          );
  tree->SetBranchAddress("muplus_OWNPV_XERR"                     , &muplus_OWNPV_XERR                       );
  tree->SetBranchAddress("muplus_OWNPV_YERR"                     , &muplus_OWNPV_YERR                       );
  tree->SetBranchAddress("muplus_OWNPV_ZERR"                     , &muplus_OWNPV_ZERR                       );
  tree->SetBranchAddress("muplus_OWNPV_CHI2"                     , &muplus_OWNPV_CHI2                       );
  tree->SetBranchAddress("muplus_OWNPV_NDOF"                     , &muplus_OWNPV_NDOF                       );
  tree->SetBranchAddress("muplus_IP_OWNPV"                       , &muplus_IP_OWNPV                         );
  tree->SetBranchAddress("muplus_IPCHI2_OWNPV"                   , &muplus_IPCHI2_OWNPV                     );
  tree->SetBranchAddress("muplus_ORIVX_X"                        , &muplus_ORIVX_X                          );
  tree->SetBranchAddress("muplus_ORIVX_Y"                        , &muplus_ORIVX_Y                          );
  tree->SetBranchAddress("muplus_ORIVX_Z"                        , &muplus_ORIVX_Z                          );
  tree->SetBranchAddress("muplus_ORIVX_XERR"                     , &muplus_ORIVX_XERR                       );
  tree->SetBranchAddress("muplus_ORIVX_YERR"                     , &muplus_ORIVX_YERR                       );
  tree->SetBranchAddress("muplus_ORIVX_ZERR"                     , &muplus_ORIVX_ZERR                       );
  tree->SetBranchAddress("muplus_ORIVX_CHI2"                     , &muplus_ORIVX_CHI2                       );
  tree->SetBranchAddress("muplus_ORIVX_NDOF"                     , &muplus_ORIVX_NDOF                       );
  tree->SetBranchAddress("muplus_P"                              , &muplus_P                                );
  tree->SetBranchAddress("muplus_PT"                             , &muplus_PT                               );
  tree->SetBranchAddress("muplus_PE"                             , &muplus_PE                               );
  tree->SetBranchAddress("muplus_PX"                             , &muplus_PX                               );
  tree->SetBranchAddress("muplus_PY"                             , &muplus_PY                               );
  tree->SetBranchAddress("muplus_PZ"                             , &muplus_PZ                               );
  tree->SetBranchAddress("muplus_M"                              , &muplus_M                                );
  tree->SetBranchAddress("muplus_ID"                             , &muplus_ID                               );
  tree->SetBranchAddress("muplus_PIDe"                           , &muplus_PIDe                             );
  tree->SetBranchAddress("muplus_PIDmu"                          , &muplus_PIDmu                            );
  tree->SetBranchAddress("muplus_PIDK"                           , &muplus_PIDK                             );
  tree->SetBranchAddress("muplus_PIDp"                           , &muplus_PIDp                             );
  tree->SetBranchAddress("muplus_ProbNNe"                        , &muplus_ProbNNe                          );
  tree->SetBranchAddress("muplus_ProbNNk"                        , &muplus_ProbNNk                          );
  tree->SetBranchAddress("muplus_ProbNNp"                        , &muplus_ProbNNp                          );
  tree->SetBranchAddress("muplus_ProbNNpi"                       , &muplus_ProbNNpi                         );
  tree->SetBranchAddress("muplus_ProbNNmu"                       , &muplus_ProbNNmu                         );
  tree->SetBranchAddress("muplus_ProbNNghost"                    , &muplus_ProbNNghost                      );
  tree->SetBranchAddress("muplus_ETA"                            , &muplus_ETA                              );
  tree->SetBranchAddress("muplus_MIPCHI2PV"                      , &muplus_MIPCHI2PV                        );
  tree->SetBranchAddress("muplus_TRCHI2DOF"                      , &muplus_TRCHI2DOF                        );
  tree->SetBranchAddress("muplus_TRGHOSTPROB"                    , &muplus_TRGHOSTPROB                      );
  tree->SetBranchAddress("muminus_MINIP"                         , &muminus_MINIP                           );
  tree->SetBranchAddress("muminus_MINIPCHI2"                     , &muminus_MINIPCHI2                       );
  tree->SetBranchAddress("muminus_CosTheta"                      , &muminus_CosTheta                        );
  tree->SetBranchAddress("muminus_OWNPV_X"                       , &muminus_OWNPV_X                         );
  tree->SetBranchAddress("muminus_OWNPV_Y"                       , &muminus_OWNPV_Y                         );
  tree->SetBranchAddress("muminus_OWNPV_Z"                       , &muminus_OWNPV_Z                         );
  tree->SetBranchAddress("muminus_OWNPV_XERR"                    , &muminus_OWNPV_XERR                      );
  tree->SetBranchAddress("muminus_OWNPV_YERR"                    , &muminus_OWNPV_YERR                      );
  tree->SetBranchAddress("muminus_OWNPV_ZERR"                    , &muminus_OWNPV_ZERR                      );
  tree->SetBranchAddress("muminus_OWNPV_CHI2"                    , &muminus_OWNPV_CHI2                      );
  tree->SetBranchAddress("muminus_OWNPV_NDOF"                    , &muminus_OWNPV_NDOF                      );
  tree->SetBranchAddress("muminus_IP_OWNPV"                      , &muminus_IP_OWNPV                        );
  tree->SetBranchAddress("muminus_IPCHI2_OWNPV"                  , &muminus_IPCHI2_OWNPV                    );
  tree->SetBranchAddress("muminus_ORIVX_X"                       , &muminus_ORIVX_X                         );
  tree->SetBranchAddress("muminus_ORIVX_Y"                       , &muminus_ORIVX_Y                         );
  tree->SetBranchAddress("muminus_ORIVX_Z"                       , &muminus_ORIVX_Z                         );
  tree->SetBranchAddress("muminus_ORIVX_XERR"                    , &muminus_ORIVX_XERR                      );
  tree->SetBranchAddress("muminus_ORIVX_YERR"                    , &muminus_ORIVX_YERR                      );
  tree->SetBranchAddress("muminus_ORIVX_ZERR"                    , &muminus_ORIVX_ZERR                      );
  tree->SetBranchAddress("muminus_ORIVX_CHI2"                    , &muminus_ORIVX_CHI2                      );
  tree->SetBranchAddress("muminus_ORIVX_NDOF"                    , &muminus_ORIVX_NDOF                      );
  tree->SetBranchAddress("muminus_P"                             , &muminus_P                               );
  tree->SetBranchAddress("muminus_PT"                            , &muminus_PT                              );
  tree->SetBranchAddress("muminus_PE"                            , &muminus_PE                              );
  tree->SetBranchAddress("muminus_PX"                            , &muminus_PX                              );
  tree->SetBranchAddress("muminus_PY"                            , &muminus_PY                              );
  tree->SetBranchAddress("muminus_PZ"                            , &muminus_PZ                              );
  tree->SetBranchAddress("muminus_M"                             , &muminus_M                               );
  tree->SetBranchAddress("muminus_ID"                            , &muminus_ID                              );
  tree->SetBranchAddress("muminus_PIDe"                          , &muminus_PIDe                            );
  tree->SetBranchAddress("muminus_PIDmu"                         , &muminus_PIDmu                           );
  tree->SetBranchAddress("muminus_PIDK"                          , &muminus_PIDK                            );
  tree->SetBranchAddress("muminus_PIDp"                          , &muminus_PIDp                            );
  tree->SetBranchAddress("muminus_ProbNNe"                       , &muminus_ProbNNe                         );
  tree->SetBranchAddress("muminus_ProbNNk"                       , &muminus_ProbNNk                         );
  tree->SetBranchAddress("muminus_ProbNNp"                       , &muminus_ProbNNp                         );
  tree->SetBranchAddress("muminus_ProbNNpi"                      , &muminus_ProbNNpi                        );
  tree->SetBranchAddress("muminus_ProbNNmu"                      , &muminus_ProbNNmu                        );
  tree->SetBranchAddress("muminus_ProbNNghost"                   , &muminus_ProbNNghost                     );
  tree->SetBranchAddress("muminus_ETA"                           , &muminus_ETA                             );
  tree->SetBranchAddress("muminus_MIPCHI2PV"                     , &muminus_MIPCHI2PV                       );
  tree->SetBranchAddress("muminus_TRCHI2DOF"                     , &muminus_TRCHI2DOF                       );
  tree->SetBranchAddress("muminus_TRGHOSTPROB"                   , &muminus_TRGHOSTPROB                     );
  tree->SetBranchAddress("phi_MINIP"                             , &phi_MINIP                               );
  tree->SetBranchAddress("phi_MINIPCHI2"                         , &phi_MINIPCHI2                           );
  tree->SetBranchAddress("phi_CosTheta"                          , &phi_CosTheta                            );
  tree->SetBranchAddress("phi_ENDVERTEX_X"                       , &phi_ENDVERTEX_X                         );
  tree->SetBranchAddress("phi_ENDVERTEX_Y"                       , &phi_ENDVERTEX_Y                         );
  tree->SetBranchAddress("phi_ENDVERTEX_Z"                       , &phi_ENDVERTEX_Z                         );
  tree->SetBranchAddress("phi_ENDVERTEX_XERR"                    , &phi_ENDVERTEX_XERR                      );
  tree->SetBranchAddress("phi_ENDVERTEX_YERR"                    , &phi_ENDVERTEX_YERR                      );
  tree->SetBranchAddress("phi_ENDVERTEX_ZERR"                    , &phi_ENDVERTEX_ZERR                      );
  tree->SetBranchAddress("phi_ENDVERTEX_CHI2"                    , &phi_ENDVERTEX_CHI2                      );
  tree->SetBranchAddress("phi_ENDVERTEX_NDOF"                    , &phi_ENDVERTEX_NDOF                      );
  tree->SetBranchAddress("phi_OWNPV_X"                           , &phi_OWNPV_X                             );
  tree->SetBranchAddress("phi_OWNPV_Y"                           , &phi_OWNPV_Y                             );
  tree->SetBranchAddress("phi_OWNPV_Z"                           , &phi_OWNPV_Z                             );
  tree->SetBranchAddress("phi_OWNPV_XERR"                        , &phi_OWNPV_XERR                          );
  tree->SetBranchAddress("phi_OWNPV_YERR"                        , &phi_OWNPV_YERR                          );
  tree->SetBranchAddress("phi_OWNPV_ZERR"                        , &phi_OWNPV_ZERR                          );
  tree->SetBranchAddress("phi_OWNPV_CHI2"                        , &phi_OWNPV_CHI2                          );
  tree->SetBranchAddress("phi_OWNPV_NDOF"                        , &phi_OWNPV_NDOF                          );
  tree->SetBranchAddress("phi_IP_OWNPV"                          , &phi_IP_OWNPV                            );
  tree->SetBranchAddress("phi_IPCHI2_OWNPV"                      , &phi_IPCHI2_OWNPV                        );
  tree->SetBranchAddress("phi_FD_OWNPV"                          , &phi_FD_OWNPV                            );
  tree->SetBranchAddress("phi_FDCHI2_OWNPV"                      , &phi_FDCHI2_OWNPV                        );
  tree->SetBranchAddress("phi_DIRA_OWNPV"                        , &phi_DIRA_OWNPV                          );
  tree->SetBranchAddress("phi_ORIVX_X"                           , &phi_ORIVX_X                             );
  tree->SetBranchAddress("phi_ORIVX_Y"                           , &phi_ORIVX_Y                             );
  tree->SetBranchAddress("phi_ORIVX_Z"                           , &phi_ORIVX_Z                             );
  tree->SetBranchAddress("phi_ORIVX_XERR"                        , &phi_ORIVX_XERR                          );
  tree->SetBranchAddress("phi_ORIVX_YERR"                        , &phi_ORIVX_YERR                          );
  tree->SetBranchAddress("phi_ORIVX_ZERR"                        , &phi_ORIVX_ZERR                          );
  tree->SetBranchAddress("phi_ORIVX_CHI2"                        , &phi_ORIVX_CHI2                          );
  tree->SetBranchAddress("phi_ORIVX_NDOF"                        , &phi_ORIVX_NDOF                          );
  tree->SetBranchAddress("phi_FD_ORIVX"                          , &phi_FD_ORIVX                            );
  tree->SetBranchAddress("phi_FDCHI2_ORIVX"                      , &phi_FDCHI2_ORIVX                        );
  tree->SetBranchAddress("phi_DIRA_ORIVX"                        , &phi_DIRA_ORIVX                          );
  tree->SetBranchAddress("phi_P"                                 , &phi_P                                   );
  tree->SetBranchAddress("phi_PT"                                , &phi_PT                                  );
  tree->SetBranchAddress("phi_PE"                                , &phi_PE                                  );
  tree->SetBranchAddress("phi_PX"                                , &phi_PX                                  );
  tree->SetBranchAddress("phi_PY"                                , &phi_PY                                  );
  tree->SetBranchAddress("phi_PZ"                                , &phi_PZ                                  );
  tree->SetBranchAddress("phi_M"                                 , &phi_M                                   );
  tree->SetBranchAddress("phi_BKGCAT"                            , &phi_BKGCAT                              );
  tree->SetBranchAddress("phi_ID"                                , &phi_ID                                  );
  tree->SetBranchAddress("phi_BPVDIRA"                           , &phi_BPVDIRA                             );
  tree->SetBranchAddress("phi_BPVIPCHI2"                         , &phi_BPVIPCHI2                           );
  tree->SetBranchAddress("phi_BPVLTIME"                          , &phi_BPVLTIME                            );
  tree->SetBranchAddress("phi_BPVVDCHI2"                         , &phi_BPVVDCHI2                           );
  tree->SetBranchAddress("phi_BPVVDZ"                            , &phi_BPVVDZ                              );
  tree->SetBranchAddress("phi_ETA"                               , &phi_ETA                                 );
  tree->SetBranchAddress("Kplus_MINIP"                           , &Kplus_MINIP                             );
  tree->SetBranchAddress("Kplus_MINIPCHI2"                       , &Kplus_MINIPCHI2                         );
  tree->SetBranchAddress("Kplus_CosTheta"                        , &Kplus_CosTheta                          );
  tree->SetBranchAddress("Kplus_OWNPV_X"                         , &Kplus_OWNPV_X                           );
  tree->SetBranchAddress("Kplus_OWNPV_Y"                         , &Kplus_OWNPV_Y                           );
  tree->SetBranchAddress("Kplus_OWNPV_Z"                         , &Kplus_OWNPV_Z                           );
  tree->SetBranchAddress("Kplus_OWNPV_XERR"                      , &Kplus_OWNPV_XERR                        );
  tree->SetBranchAddress("Kplus_OWNPV_YERR"                      , &Kplus_OWNPV_YERR                        );
  tree->SetBranchAddress("Kplus_OWNPV_ZERR"                      , &Kplus_OWNPV_ZERR                        );
  tree->SetBranchAddress("Kplus_OWNPV_CHI2"                      , &Kplus_OWNPV_CHI2                        );
  tree->SetBranchAddress("Kplus_OWNPV_NDOF"                      , &Kplus_OWNPV_NDOF                        );
  tree->SetBranchAddress("Kplus_IP_OWNPV"                        , &Kplus_IP_OWNPV                          );
  tree->SetBranchAddress("Kplus_IPCHI2_OWNPV"                    , &Kplus_IPCHI2_OWNPV                      );
  tree->SetBranchAddress("Kplus_ORIVX_X"                         , &Kplus_ORIVX_X                           );
  tree->SetBranchAddress("Kplus_ORIVX_Y"                         , &Kplus_ORIVX_Y                           );
  tree->SetBranchAddress("Kplus_ORIVX_Z"                         , &Kplus_ORIVX_Z                           );
  tree->SetBranchAddress("Kplus_ORIVX_XERR"                      , &Kplus_ORIVX_XERR                        );
  tree->SetBranchAddress("Kplus_ORIVX_YERR"                      , &Kplus_ORIVX_YERR                        );
  tree->SetBranchAddress("Kplus_ORIVX_ZERR"                      , &Kplus_ORIVX_ZERR                        );
  tree->SetBranchAddress("Kplus_ORIVX_CHI2"                      , &Kplus_ORIVX_CHI2                        );
  tree->SetBranchAddress("Kplus_ORIVX_NDOF"                      , &Kplus_ORIVX_NDOF                        );
  tree->SetBranchAddress("Kplus_P"                               , &Kplus_P                                 );
  tree->SetBranchAddress("Kplus_PT"                              , &Kplus_PT                                );
  tree->SetBranchAddress("Kplus_PE"                              , &Kplus_PE                                );
  tree->SetBranchAddress("Kplus_PX"                              , &Kplus_PX                                );
  tree->SetBranchAddress("Kplus_PY"                              , &Kplus_PY                                );
  tree->SetBranchAddress("Kplus_PZ"                              , &Kplus_PZ                                );
  tree->SetBranchAddress("Kplus_M"                               , &Kplus_M                                 );
  tree->SetBranchAddress("Kplus_ID"                              , &Kplus_ID                                );
  tree->SetBranchAddress("Kplus_PIDe"                            , &Kplus_PIDe                              );
  tree->SetBranchAddress("Kplus_PIDmu"                           , &Kplus_PIDmu                             );
  tree->SetBranchAddress("Kplus_PIDK"                            , &Kplus_PIDK                              );
  tree->SetBranchAddress("Kplus_PIDp"                            , &Kplus_PIDp                              );
  tree->SetBranchAddress("Kplus_ProbNNe"                         , &Kplus_ProbNNe                           );
  tree->SetBranchAddress("Kplus_ProbNNk"                         , &Kplus_ProbNNk                           );
  tree->SetBranchAddress("Kplus_ProbNNp"                         , &Kplus_ProbNNp                           );
  tree->SetBranchAddress("Kplus_ProbNNpi"                        , &Kplus_ProbNNpi                          );
  tree->SetBranchAddress("Kplus_ProbNNmu"                        , &Kplus_ProbNNmu                          );
  tree->SetBranchAddress("Kplus_ProbNNghost"                     , &Kplus_ProbNNghost                       );
  tree->SetBranchAddress("Kplus_ETA"                             , &Kplus_ETA                               );
  tree->SetBranchAddress("Kplus_MIPCHI2PV"                       , &Kplus_MIPCHI2PV                         );
  tree->SetBranchAddress("Kplus_TRCHI2DOF"                       , &Kplus_TRCHI2DOF                         );
  tree->SetBranchAddress("Kplus_TRGHOSTPROB"                     , &Kplus_TRGHOSTPROB                       );
  tree->SetBranchAddress("Kminus_MINIP"                          , &Kminus_MINIP                            );
  tree->SetBranchAddress("Kminus_MINIPCHI2"                      , &Kminus_MINIPCHI2                        );
  tree->SetBranchAddress("Kminus_CosTheta"                       , &Kminus_CosTheta                         );
  tree->SetBranchAddress("Kminus_OWNPV_X"                        , &Kminus_OWNPV_X                          );
  tree->SetBranchAddress("Kminus_OWNPV_Y"                        , &Kminus_OWNPV_Y                          );
  tree->SetBranchAddress("Kminus_OWNPV_Z"                        , &Kminus_OWNPV_Z                          );
  tree->SetBranchAddress("Kminus_OWNPV_XERR"                     , &Kminus_OWNPV_XERR                       );
  tree->SetBranchAddress("Kminus_OWNPV_YERR"                     , &Kminus_OWNPV_YERR                       );
  tree->SetBranchAddress("Kminus_OWNPV_ZERR"                     , &Kminus_OWNPV_ZERR                       );
  tree->SetBranchAddress("Kminus_OWNPV_CHI2"                     , &Kminus_OWNPV_CHI2                       );
  tree->SetBranchAddress("Kminus_OWNPV_NDOF"                     , &Kminus_OWNPV_NDOF                       );
  tree->SetBranchAddress("Kminus_IP_OWNPV"                       , &Kminus_IP_OWNPV                         );
  tree->SetBranchAddress("Kminus_IPCHI2_OWNPV"                   , &Kminus_IPCHI2_OWNPV                     );
  tree->SetBranchAddress("Kminus_ORIVX_X"                        , &Kminus_ORIVX_X                          );
  tree->SetBranchAddress("Kminus_ORIVX_Y"                        , &Kminus_ORIVX_Y                          );
  tree->SetBranchAddress("Kminus_ORIVX_Z"                        , &Kminus_ORIVX_Z                          );
  tree->SetBranchAddress("Kminus_ORIVX_XERR"                     , &Kminus_ORIVX_XERR                       );
  tree->SetBranchAddress("Kminus_ORIVX_YERR"                     , &Kminus_ORIVX_YERR                       );
  tree->SetBranchAddress("Kminus_ORIVX_ZERR"                     , &Kminus_ORIVX_ZERR                       );
  tree->SetBranchAddress("Kminus_ORIVX_CHI2"                     , &Kminus_ORIVX_CHI2                       );
  tree->SetBranchAddress("Kminus_ORIVX_NDOF"                     , &Kminus_ORIVX_NDOF                       );
  tree->SetBranchAddress("Kminus_P"                              , &Kminus_P                                );
  tree->SetBranchAddress("Kminus_PT"                             , &Kminus_PT                               );
  tree->SetBranchAddress("Kminus_PE"                             , &Kminus_PE                               );
  tree->SetBranchAddress("Kminus_PX"                             , &Kminus_PX                               );
  tree->SetBranchAddress("Kminus_PY"                             , &Kminus_PY                               );
  tree->SetBranchAddress("Kminus_PZ"                             , &Kminus_PZ                               );
  tree->SetBranchAddress("Kminus_M"                              , &Kminus_M                                );
  tree->SetBranchAddress("Kminus_ID"                             , &Kminus_ID                               );
  tree->SetBranchAddress("Kminus_PIDe"                           , &Kminus_PIDe                             );
  tree->SetBranchAddress("Kminus_PIDmu"                          , &Kminus_PIDmu                            );
  tree->SetBranchAddress("Kminus_PIDK"                           , &Kminus_PIDK                             );
  tree->SetBranchAddress("Kminus_PIDp"                           , &Kminus_PIDp                             );
  tree->SetBranchAddress("Kminus_ProbNNe"                        , &Kminus_ProbNNe                          );
  tree->SetBranchAddress("Kminus_ProbNNk"                        , &Kminus_ProbNNk                          );
  tree->SetBranchAddress("Kminus_ProbNNp"                        , &Kminus_ProbNNp                          );
  tree->SetBranchAddress("Kminus_ProbNNpi"                       , &Kminus_ProbNNpi                         );
  tree->SetBranchAddress("Kminus_ProbNNmu"                       , &Kminus_ProbNNmu                         );
  tree->SetBranchAddress("Kminus_ProbNNghost"                    , &Kminus_ProbNNghost                      );
  tree->SetBranchAddress("Kminus_ETA"                            , &Kminus_ETA                              );
  tree->SetBranchAddress("Kminus_MIPCHI2PV"                      , &Kminus_MIPCHI2PV                        );
  tree->SetBranchAddress("Kminus_TRCHI2DOF"                      , &Kminus_TRCHI2DOF                        );
  tree->SetBranchAddress("Kminus_TRGHOSTPROB"                    , &Kminus_TRGHOSTPROB                      );
  tree->SetBranchAddress("Pibach_MINIP"                          , &Pibach_MINIP                            );
  tree->SetBranchAddress("Pibach_MINIPCHI2"                      , &Pibach_MINIPCHI2                        );
  tree->SetBranchAddress("Pibach_CosTheta"                       , &Pibach_CosTheta                         );
  tree->SetBranchAddress("Pibach_OWNPV_X"                        , &Pibach_OWNPV_X                          );
  tree->SetBranchAddress("Pibach_OWNPV_Y"                        , &Pibach_OWNPV_Y                          );
  tree->SetBranchAddress("Pibach_OWNPV_Z"                        , &Pibach_OWNPV_Z                          );
  tree->SetBranchAddress("Pibach_OWNPV_XERR"                     , &Pibach_OWNPV_XERR                       );
  tree->SetBranchAddress("Pibach_OWNPV_YERR"                     , &Pibach_OWNPV_YERR                       );
  tree->SetBranchAddress("Pibach_OWNPV_ZERR"                     , &Pibach_OWNPV_ZERR                       );
  tree->SetBranchAddress("Pibach_OWNPV_CHI2"                     , &Pibach_OWNPV_CHI2                       );
  tree->SetBranchAddress("Pibach_OWNPV_NDOF"                     , &Pibach_OWNPV_NDOF                       );
  tree->SetBranchAddress("Pibach_IP_OWNPV"                       , &Pibach_IP_OWNPV                         );
  tree->SetBranchAddress("Pibach_IPCHI2_OWNPV"                   , &Pibach_IPCHI2_OWNPV                     );
  tree->SetBranchAddress("Pibach_ORIVX_X"                        , &Pibach_ORIVX_X                          );
  tree->SetBranchAddress("Pibach_ORIVX_Y"                        , &Pibach_ORIVX_Y                          );
  tree->SetBranchAddress("Pibach_ORIVX_Z"                        , &Pibach_ORIVX_Z                          );
  tree->SetBranchAddress("Pibach_ORIVX_XERR"                     , &Pibach_ORIVX_XERR                       );
  tree->SetBranchAddress("Pibach_ORIVX_YERR"                     , &Pibach_ORIVX_YERR                       );
  tree->SetBranchAddress("Pibach_ORIVX_ZERR"                     , &Pibach_ORIVX_ZERR                       );
  tree->SetBranchAddress("Pibach_ORIVX_CHI2"                     , &Pibach_ORIVX_CHI2                       );
  tree->SetBranchAddress("Pibach_ORIVX_NDOF"                     , &Pibach_ORIVX_NDOF                       );
  tree->SetBranchAddress("Pibach_P"                              , &Pibach_P                                );
  tree->SetBranchAddress("Pibach_PT"                             , &Pibach_PT                               );
  tree->SetBranchAddress("Pibach_PE"                             , &Pibach_PE                               );
  tree->SetBranchAddress("Pibach_PX"                             , &Pibach_PX                               );
  tree->SetBranchAddress("Pibach_PY"                             , &Pibach_PY                               );
  tree->SetBranchAddress("Pibach_PZ"                             , &Pibach_PZ                               );
  tree->SetBranchAddress("Pibach_M"                              , &Pibach_M                                );
  tree->SetBranchAddress("Pibach_ID"                             , &Pibach_ID                               );
  tree->SetBranchAddress("Pibach_PIDe"                           , &Pibach_PIDe                             );
  tree->SetBranchAddress("Pibach_PIDmu"                          , &Pibach_PIDmu                            );
  tree->SetBranchAddress("Pibach_PIDK"                           , &Pibach_PIDK                             );
  tree->SetBranchAddress("Pibach_PIDp"                           , &Pibach_PIDp                             );
  tree->SetBranchAddress("Pibach_ProbNNe"                        , &Pibach_ProbNNe                          );
  tree->SetBranchAddress("Pibach_ProbNNk"                        , &Pibach_ProbNNk                          );
  tree->SetBranchAddress("Pibach_ProbNNp"                        , &Pibach_ProbNNp                          );
  tree->SetBranchAddress("Pibach_ProbNNpi"                       , &Pibach_ProbNNpi                         );
  tree->SetBranchAddress("Pibach_ProbNNmu"                       , &Pibach_ProbNNmu                         );
  tree->SetBranchAddress("Pibach_ProbNNghost"                    , &Pibach_ProbNNghost                      );
  tree->SetBranchAddress("Pibach_ETA"                            , &Pibach_ETA                              );
  tree->SetBranchAddress("Pibach_MIPCHI2PV"                      , &Pibach_MIPCHI2PV                        );
  tree->SetBranchAddress("Pibach_TRCHI2DOF"                      , &Pibach_TRCHI2DOF                        );
  tree->SetBranchAddress("Pibach_TRGHOSTPROB"                    , &Pibach_TRGHOSTPROB                      );
  tree->SetBranchAddress("nCandidate"                            , &nCandidate                              );
  tree->SetBranchAddress("totCandidates"                         , &totCandidates                           );
  tree->SetBranchAddress("runNumber"                             , &runNumber                               );
  tree->SetBranchAddress("eventNumber"                           , &eventNumber                             );
  tree->SetBranchAddress("Polarity"                              , &Polarity                                );
  tree->SetBranchAddress("PVX"                                   ,  PVX                                     );
  tree->SetBranchAddress("PVY"                                   ,  PVY                                     );
  tree->SetBranchAddress("PVZ"                                   ,  PVZ                                     );
  tree->SetBranchAddress("PVXERR"                                ,  PVXERR                                  );
  tree->SetBranchAddress("PVYERR"                                ,  PVYERR                                  );
  tree->SetBranchAddress("PVZERR"                                ,  PVZERR                                  );
  tree->SetBranchAddress("PVCHI2"                                ,  PVCHI2                                  );
  tree->SetBranchAddress("PVNDOF"                                ,  PVNDOF                                  );
  tree->SetBranchAddress("PVNTRACKS"                             ,  PVNTRACKS                               );
  tree->SetBranchAddress("nPVs"                                  , &nPVs                                    );
  tree->SetBranchAddress("nTracks"                               , &nTracks                                 );
}

// choose the output vars here
void Bc2BsPi::Variables_Analysis::setOutputBranches(TTree *tree) {

  // defined by us in the base class ../core/include/Variables
  tree->Branch("itype"                                 , &itype                                   );
  tree->Branch("sqrts"                                 , &sqrts                                   );
  tree->Branch("evname"                                , &evname                                  );
  tree->Branch("year"                                  , &year                                    );

  tree->Branch("B_c_B_s0_VTX_DIFF_X"                   , &B_c_B_s0_VTX_DIFF_X                     );
  tree->Branch("B_c_B_s0_VTX_DIFF_Y"                   , &B_c_B_s0_VTX_DIFF_Y                     );
  tree->Branch("B_c_B_s0_VTX_DIFF_XY"                  , &B_c_B_s0_VTX_DIFF_XY                    );
  tree->Branch("B_c_B_s0_VTX_DIFF_Z"                   , &B_c_B_s0_VTX_DIFF_Z                     );
  tree->Branch("B_c_B_s0_VTX_DIFF_R"                   , &B_c_B_s0_VTX_DIFF_R                     );

  tree->Branch("B_c_B_s0_VTX_DIFF_XERR"                , &B_c_B_s0_VTX_DIFF_XERR                  );
  tree->Branch("B_c_B_s0_VTX_DIFF_YERR"                , &B_c_B_s0_VTX_DIFF_YERR                  );
  tree->Branch("B_c_B_s0_VTX_DIFF_ZERR"                , &B_c_B_s0_VTX_DIFF_ZERR                  );
  tree->Branch("B_c_B_s0_VTX_DIFF_XYERR"               , &B_c_B_s0_VTX_DIFF_XYERR                 );
  tree->Branch("B_c_B_s0_VTX_DIFF_RERR"                , &B_c_B_s0_VTX_DIFF_RERR                  );

  tree->Branch("B_c_B_s0_VTX_DIFF_XFRACERR"            , &B_c_B_s0_VTX_DIFF_XFRACERR              );
  tree->Branch("B_c_B_s0_VTX_DIFF_YFRACERR"            , &B_c_B_s0_VTX_DIFF_YFRACERR              );
  tree->Branch("B_c_B_s0_VTX_DIFF_ZFRACERR"            , &B_c_B_s0_VTX_DIFF_ZFRACERR              );
  tree->Branch("B_c_B_s0_VTX_DIFF_XYFRACERR"           , &B_c_B_s0_VTX_DIFF_XYFRACERR             );
  tree->Branch("B_c_B_s0_VTX_DIFF_RFRACERR"            , &B_c_B_s0_VTX_DIFF_RFRACERR              );

  tree->Branch("B_c_MINIP"                             , &B_c_MINIP                               , "B_c_MINIP/D"                           );
  tree->Branch("B_c_MINIPCHI2"                         , &B_c_MINIPCHI2                           , "B_c_MINIPCHI2/D"                       );
  tree->Branch("nPV"                                   , &nPV                                     , "nPV/I"                                 );
  tree->Branch("B_c_ENDVERTEX_X"                       , &B_c_ENDVERTEX_X                         , "B_c_ENDVERTEX_X/D"                     );
  tree->Branch("B_c_ENDVERTEX_Y"                       , &B_c_ENDVERTEX_Y                         , "B_c_ENDVERTEX_Y/D"                     );
  tree->Branch("B_c_ENDVERTEX_Z"                       , &B_c_ENDVERTEX_Z                         , "B_c_ENDVERTEX_Z/D"                     );
  tree->Branch("B_c_ENDVERTEX_XERR"                    , &B_c_ENDVERTEX_XERR                      , "B_c_ENDVERTEX_XERR/D"                  );
  tree->Branch("B_c_ENDVERTEX_YERR"                    , &B_c_ENDVERTEX_YERR                      , "B_c_ENDVERTEX_YERR/D"                  );
  tree->Branch("B_c_ENDVERTEX_ZERR"                    , &B_c_ENDVERTEX_ZERR                      , "B_c_ENDVERTEX_ZERR/D"                  );
  tree->Branch("B_c_ENDVERTEX_CHI2"                    , &B_c_ENDVERTEX_CHI2                      , "B_c_ENDVERTEX_CHI2/D"                  );
  tree->Branch("B_c_ENDVERTEX_NDOF"                    , &B_c_ENDVERTEX_NDOF                      , "B_c_ENDVERTEX_NDOF/I"                  );
  tree->Branch("B_c_OWNPV_X"                           , &B_c_OWNPV_X                             , "B_c_OWNPV_X/D"                         );
  tree->Branch("B_c_OWNPV_Y"                           , &B_c_OWNPV_Y                             , "B_c_OWNPV_Y/D"                         );
  tree->Branch("B_c_OWNPV_Z"                           , &B_c_OWNPV_Z                             , "B_c_OWNPV_Z/D"                         );
  tree->Branch("B_c_OWNPV_XERR"                        , &B_c_OWNPV_XERR                          , "B_c_OWNPV_XERR/D"                      );
  tree->Branch("B_c_OWNPV_YERR"                        , &B_c_OWNPV_YERR                          , "B_c_OWNPV_YERR/D"                      );
  tree->Branch("B_c_OWNPV_ZERR"                        , &B_c_OWNPV_ZERR                          , "B_c_OWNPV_ZERR/D"                      );
  tree->Branch("B_c_OWNPV_CHI2"                        , &B_c_OWNPV_CHI2                          , "B_c_OWNPV_CHI2/D"                      );
  tree->Branch("B_c_OWNPV_NDOF"                        , &B_c_OWNPV_NDOF                          , "B_c_OWNPV_NDOF/I"                      );
  tree->Branch("B_c_IP_OWNPV"                          , &B_c_IP_OWNPV                            , "B_c_IP_OWNPV/D"                        );
  tree->Branch("B_c_IPCHI2_OWNPV"                      , &B_c_IPCHI2_OWNPV                        , "B_c_IPCHI2_OWNPV/D"                    );
  tree->Branch("B_c_FD_OWNPV"                          , &B_c_FD_OWNPV                            , "B_c_FD_OWNPV/D"                        );
  tree->Branch("B_c_FDCHI2_OWNPV"                      , &B_c_FDCHI2_OWNPV                        , "B_c_FDCHI2_OWNPV/D"                    );
  tree->Branch("B_c_DIRA_OWNPV"                        , &B_c_DIRA_OWNPV                          , "B_c_DIRA_OWNPV/D"                      );
  tree->Branch("B_c_P"                                 , &B_c_P                                   , "B_c_P/D"                               );
  tree->Branch("B_c_PT"                                , &B_c_PT                                  , "B_c_PT/D"                              );
  tree->Branch("B_c_PE"                                , &B_c_PE                                  , "B_c_PE/D"                              );
  tree->Branch("B_c_PX"                                , &B_c_PX                                  , "B_c_PX/D"                              );
  tree->Branch("B_c_PY"                                , &B_c_PY                                  , "B_c_PY/D"                              );
  tree->Branch("B_c_PZ"                                , &B_c_PZ                                  , "B_c_PZ/D"                              );
  tree->Branch("B_c_M"                                 , &B_c_M                                   , "B_c_M/D"                               );
  tree->Branch("B_c_BKGCAT"                            , &B_c_BKGCAT                              , "B_c_BKGCAT/I"                          );
  tree->Branch("B_c_ID"                                , &B_c_ID                                  , "B_c_ID/I"                              );
  tree->Branch("B_c_BPVDIRA"                           , &B_c_BPVDIRA                             , "B_c_BPVDIRA/D"                         );
  tree->Branch("B_c_BPVIPCHI2"                         , &B_c_BPVIPCHI2                           , "B_c_BPVIPCHI2/D"                       );
  tree->Branch("B_c_BPVLTIME"                          , &B_c_BPVLTIME                            , "B_c_BPVLTIME/D"                        );
  tree->Branch("B_c_BPVVDCHI2"                         , &B_c_BPVVDCHI2                           , "B_c_BPVVDCHI2/D"                       );
  tree->Branch("B_c_BPVVDZ"                            , &B_c_BPVVDZ                              , "B_c_BPVVDZ/D"                          );
  tree->Branch("B_c_ETA"                               , &B_c_ETA                                 , "B_c_ETA/D"                             );
  tree->Branch("B_s0_MINIP"                            , &B_s0_MINIP                              , "B_s0_MINIP/D"                          );
  tree->Branch("B_s0_MINIPCHI2"                        , &B_s0_MINIPCHI2                          , "B_s0_MINIPCHI2/D"                      );
  tree->Branch("B_s0_CosTheta"                         , &B_s0_CosTheta                           , "B_s0_CosTheta/D"                       );
  tree->Branch("B_s0_ENDVERTEX_X"                      , &B_s0_ENDVERTEX_X                        , "B_s0_ENDVERTEX_X/D"                    );
  tree->Branch("B_s0_ENDVERTEX_Y"                      , &B_s0_ENDVERTEX_Y                        , "B_s0_ENDVERTEX_Y/D"                    );
  tree->Branch("B_s0_ENDVERTEX_Z"                      , &B_s0_ENDVERTEX_Z                        , "B_s0_ENDVERTEX_Z/D"                    );
  tree->Branch("B_s0_ENDVERTEX_XERR"                   , &B_s0_ENDVERTEX_XERR                     , "B_s0_ENDVERTEX_XERR/D"                 );
  tree->Branch("B_s0_ENDVERTEX_YERR"                   , &B_s0_ENDVERTEX_YERR                     , "B_s0_ENDVERTEX_YERR/D"                 );
  tree->Branch("B_s0_ENDVERTEX_ZERR"                   , &B_s0_ENDVERTEX_ZERR                     , "B_s0_ENDVERTEX_ZERR/D"                 );
  tree->Branch("B_s0_ENDVERTEX_CHI2"                   , &B_s0_ENDVERTEX_CHI2                     , "B_s0_ENDVERTEX_CHI2/D"                 );
  tree->Branch("B_s0_ENDVERTEX_NDOF"                   , &B_s0_ENDVERTEX_NDOF                     , "B_s0_ENDVERTEX_NDOF/I"                 );
  tree->Branch("B_s0_OWNPV_X"                          , &B_s0_OWNPV_X                            , "B_s0_OWNPV_X/D"                        );
  tree->Branch("B_s0_OWNPV_Y"                          , &B_s0_OWNPV_Y                            , "B_s0_OWNPV_Y/D"                        );
  tree->Branch("B_s0_OWNPV_Z"                          , &B_s0_OWNPV_Z                            , "B_s0_OWNPV_Z/D"                        );
  tree->Branch("B_s0_OWNPV_XERR"                       , &B_s0_OWNPV_XERR                         , "B_s0_OWNPV_XERR/D"                     );
  tree->Branch("B_s0_OWNPV_YERR"                       , &B_s0_OWNPV_YERR                         , "B_s0_OWNPV_YERR/D"                     );
  tree->Branch("B_s0_OWNPV_ZERR"                       , &B_s0_OWNPV_ZERR                         , "B_s0_OWNPV_ZERR/D"                     );
  tree->Branch("B_s0_OWNPV_CHI2"                       , &B_s0_OWNPV_CHI2                         , "B_s0_OWNPV_CHI2/D"                     );
  tree->Branch("B_s0_OWNPV_NDOF"                       , &B_s0_OWNPV_NDOF                         , "B_s0_OWNPV_NDOF/I"                     );
  tree->Branch("B_s0_IP_OWNPV"                         , &B_s0_IP_OWNPV                           , "B_s0_IP_OWNPV/D"                       );
  tree->Branch("B_s0_IPCHI2_OWNPV"                     , &B_s0_IPCHI2_OWNPV                       , "B_s0_IPCHI2_OWNPV/D"                   );
  tree->Branch("B_s0_FD_OWNPV"                         , &B_s0_FD_OWNPV                           , "B_s0_FD_OWNPV/D"                       );
  tree->Branch("B_s0_FDCHI2_OWNPV"                     , &B_s0_FDCHI2_OWNPV                       , "B_s0_FDCHI2_OWNPV/D"                   );
  tree->Branch("B_s0_DIRA_OWNPV"                       , &B_s0_DIRA_OWNPV                         , "B_s0_DIRA_OWNPV/D"                     );
  tree->Branch("B_s0_ORIVX_X"                          , &B_s0_ORIVX_X                            , "B_s0_ORIVX_X/D"                        );
  tree->Branch("B_s0_ORIVX_Y"                          , &B_s0_ORIVX_Y                            , "B_s0_ORIVX_Y/D"                        );
  tree->Branch("B_s0_ORIVX_Z"                          , &B_s0_ORIVX_Z                            , "B_s0_ORIVX_Z/D"                        );
  tree->Branch("B_s0_ORIVX_XERR"                       , &B_s0_ORIVX_XERR                         , "B_s0_ORIVX_XERR/D"                     );
  tree->Branch("B_s0_ORIVX_YERR"                       , &B_s0_ORIVX_YERR                         , "B_s0_ORIVX_YERR/D"                     );
  tree->Branch("B_s0_ORIVX_ZERR"                       , &B_s0_ORIVX_ZERR                         , "B_s0_ORIVX_ZERR/D"                     );
  tree->Branch("B_s0_ORIVX_CHI2"                       , &B_s0_ORIVX_CHI2                         , "B_s0_ORIVX_CHI2/D"                     );
  tree->Branch("B_s0_ORIVX_NDOF"                       , &B_s0_ORIVX_NDOF                         , "B_s0_ORIVX_NDOF/I"                     );
  tree->Branch("B_s0_FD_ORIVX"                         , &B_s0_FD_ORIVX                           , "B_s0_FD_ORIVX/D"                       );
  tree->Branch("B_s0_FDCHI2_ORIVX"                     , &B_s0_FDCHI2_ORIVX                       , "B_s0_FDCHI2_ORIVX/D"                   );
  tree->Branch("B_s0_DIRA_ORIVX"                       , &B_s0_DIRA_ORIVX                         , "B_s0_DIRA_ORIVX/D"                     );
  tree->Branch("B_s0_P"                                , &B_s0_P                                  , "B_s0_P/D"                              );
  tree->Branch("B_s0_PT"                               , &B_s0_PT                                 , "B_s0_PT/D"                             );
  tree->Branch("B_s0_PE"                               , &B_s0_PE                                 , "B_s0_PE/D"                             );
  tree->Branch("B_s0_PX"                               , &B_s0_PX                                 , "B_s0_PX/D"                             );
  tree->Branch("B_s0_PY"                               , &B_s0_PY                                 , "B_s0_PY/D"                             );
  tree->Branch("B_s0_PZ"                               , &B_s0_PZ                                 , "B_s0_PZ/D"                             );
  tree->Branch("B_s0_M"                                , &B_s0_M                                  , "B_s0_M/D"                              );
  tree->Branch("B_s0_BKGCAT"                           , &B_s0_BKGCAT                             , "B_s0_BKGCAT/I"                         );
  tree->Branch("B_s0_ID"                               , &B_s0_ID                                 , "B_s0_ID/I"                             );
  tree->Branch("B_s0_BPVDIRA"                          , &B_s0_BPVDIRA                            , "B_s0_BPVDIRA/D"                        );
  tree->Branch("B_s0_BPVIPCHI2"                        , &B_s0_BPVIPCHI2                          , "B_s0_BPVIPCHI2/D"                      );
  tree->Branch("B_s0_BPVLTIME"                         , &B_s0_BPVLTIME                           , "B_s0_BPVLTIME/D"                       );
  tree->Branch("B_s0_BPVVDCHI2"                        , &B_s0_BPVVDCHI2                          , "B_s0_BPVVDCHI2/D"                      );
  tree->Branch("B_s0_BPVVDZ"                           , &B_s0_BPVVDZ                             , "B_s0_BPVVDZ/D"                         );
  tree->Branch("B_s0_ETA"                              , &B_s0_ETA                                , "B_s0_ETA/D"                            );
  tree->Branch("Jpsi_MINIP"                            , &Jpsi_MINIP                              , "Jpsi_MINIP/D"                          );
  tree->Branch("Jpsi_MINIPCHI2"                        , &Jpsi_MINIPCHI2                          , "Jpsi_MINIPCHI2/D"                      );
  tree->Branch("Jpsi_CosTheta"                         , &Jpsi_CosTheta                           , "Jpsi_CosTheta/D"                       );
  tree->Branch("Jpsi_ENDVERTEX_X"                      , &Jpsi_ENDVERTEX_X                        , "Jpsi_ENDVERTEX_X/D"                    );
  tree->Branch("Jpsi_ENDVERTEX_Y"                      , &Jpsi_ENDVERTEX_Y                        , "Jpsi_ENDVERTEX_Y/D"                    );
  tree->Branch("Jpsi_ENDVERTEX_Z"                      , &Jpsi_ENDVERTEX_Z                        , "Jpsi_ENDVERTEX_Z/D"                    );
  tree->Branch("Jpsi_ENDVERTEX_XERR"                   , &Jpsi_ENDVERTEX_XERR                     , "Jpsi_ENDVERTEX_XERR/D"                 );
  tree->Branch("Jpsi_ENDVERTEX_YERR"                   , &Jpsi_ENDVERTEX_YERR                     , "Jpsi_ENDVERTEX_YERR/D"                 );
  tree->Branch("Jpsi_ENDVERTEX_ZERR"                   , &Jpsi_ENDVERTEX_ZERR                     , "Jpsi_ENDVERTEX_ZERR/D"                 );
  tree->Branch("Jpsi_ENDVERTEX_CHI2"                   , &Jpsi_ENDVERTEX_CHI2                     , "Jpsi_ENDVERTEX_CHI2/D"                 );
  tree->Branch("Jpsi_ENDVERTEX_NDOF"                   , &Jpsi_ENDVERTEX_NDOF                     , "Jpsi_ENDVERTEX_NDOF/I"                 );
  tree->Branch("Jpsi_OWNPV_X"                          , &Jpsi_OWNPV_X                            , "Jpsi_OWNPV_X/D"                        );
  tree->Branch("Jpsi_OWNPV_Y"                          , &Jpsi_OWNPV_Y                            , "Jpsi_OWNPV_Y/D"                        );
  tree->Branch("Jpsi_OWNPV_Z"                          , &Jpsi_OWNPV_Z                            , "Jpsi_OWNPV_Z/D"                        );
  tree->Branch("Jpsi_OWNPV_XERR"                       , &Jpsi_OWNPV_XERR                         , "Jpsi_OWNPV_XERR/D"                     );
  tree->Branch("Jpsi_OWNPV_YERR"                       , &Jpsi_OWNPV_YERR                         , "Jpsi_OWNPV_YERR/D"                     );
  tree->Branch("Jpsi_OWNPV_ZERR"                       , &Jpsi_OWNPV_ZERR                         , "Jpsi_OWNPV_ZERR/D"                     );
  tree->Branch("Jpsi_OWNPV_CHI2"                       , &Jpsi_OWNPV_CHI2                         , "Jpsi_OWNPV_CHI2/D"                     );
  tree->Branch("Jpsi_OWNPV_NDOF"                       , &Jpsi_OWNPV_NDOF                         , "Jpsi_OWNPV_NDOF/I"                     );
  tree->Branch("Jpsi_IP_OWNPV"                         , &Jpsi_IP_OWNPV                           , "Jpsi_IP_OWNPV/D"                       );
  tree->Branch("Jpsi_IPCHI2_OWNPV"                     , &Jpsi_IPCHI2_OWNPV                       , "Jpsi_IPCHI2_OWNPV/D"                   );
  tree->Branch("Jpsi_FD_OWNPV"                         , &Jpsi_FD_OWNPV                           , "Jpsi_FD_OWNPV/D"                       );
  tree->Branch("Jpsi_FDCHI2_OWNPV"                     , &Jpsi_FDCHI2_OWNPV                       , "Jpsi_FDCHI2_OWNPV/D"                   );
  tree->Branch("Jpsi_DIRA_OWNPV"                       , &Jpsi_DIRA_OWNPV                         , "Jpsi_DIRA_OWNPV/D"                     );
  tree->Branch("Jpsi_ORIVX_X"                          , &Jpsi_ORIVX_X                            , "Jpsi_ORIVX_X/D"                        );
  tree->Branch("Jpsi_ORIVX_Y"                          , &Jpsi_ORIVX_Y                            , "Jpsi_ORIVX_Y/D"                        );
  tree->Branch("Jpsi_ORIVX_Z"                          , &Jpsi_ORIVX_Z                            , "Jpsi_ORIVX_Z/D"                        );
  tree->Branch("Jpsi_ORIVX_XERR"                       , &Jpsi_ORIVX_XERR                         , "Jpsi_ORIVX_XERR/D"                     );
  tree->Branch("Jpsi_ORIVX_YERR"                       , &Jpsi_ORIVX_YERR                         , "Jpsi_ORIVX_YERR/D"                     );
  tree->Branch("Jpsi_ORIVX_ZERR"                       , &Jpsi_ORIVX_ZERR                         , "Jpsi_ORIVX_ZERR/D"                     );
  tree->Branch("Jpsi_ORIVX_CHI2"                       , &Jpsi_ORIVX_CHI2                         , "Jpsi_ORIVX_CHI2/D"                     );
  tree->Branch("Jpsi_ORIVX_NDOF"                       , &Jpsi_ORIVX_NDOF                         , "Jpsi_ORIVX_NDOF/I"                     );
  tree->Branch("Jpsi_FD_ORIVX"                         , &Jpsi_FD_ORIVX                           , "Jpsi_FD_ORIVX/D"                       );
  tree->Branch("Jpsi_FDCHI2_ORIVX"                     , &Jpsi_FDCHI2_ORIVX                       , "Jpsi_FDCHI2_ORIVX/D"                   );
  tree->Branch("Jpsi_DIRA_ORIVX"                       , &Jpsi_DIRA_ORIVX                         , "Jpsi_DIRA_ORIVX/D"                     );
  tree->Branch("Jpsi_P"                                , &Jpsi_P                                  , "Jpsi_P/D"                              );
  tree->Branch("Jpsi_PT"                               , &Jpsi_PT                                 , "Jpsi_PT/D"                             );
  tree->Branch("Jpsi_PE"                               , &Jpsi_PE                                 , "Jpsi_PE/D"                             );
  tree->Branch("Jpsi_PX"                               , &Jpsi_PX                                 , "Jpsi_PX/D"                             );
  tree->Branch("Jpsi_PY"                               , &Jpsi_PY                                 , "Jpsi_PY/D"                             );
  tree->Branch("Jpsi_PZ"                               , &Jpsi_PZ                                 , "Jpsi_PZ/D"                             );
  tree->Branch("Jpsi_M"                                , &Jpsi_M                                  , "Jpsi_M/D"                              );
  tree->Branch("Jpsi_BKGCAT"                           , &Jpsi_BKGCAT                             , "Jpsi_BKGCAT/I"                         );
  tree->Branch("Jpsi_ID"                               , &Jpsi_ID                                 , "Jpsi_ID/I"                             );
  tree->Branch("Jpsi_BPVDIRA"                          , &Jpsi_BPVDIRA                            , "Jpsi_BPVDIRA/D"                        );
  tree->Branch("Jpsi_BPVIPCHI2"                        , &Jpsi_BPVIPCHI2                          , "Jpsi_BPVIPCHI2/D"                      );
  tree->Branch("Jpsi_BPVLTIME"                         , &Jpsi_BPVLTIME                           , "Jpsi_BPVLTIME/D"                       );
  tree->Branch("Jpsi_BPVVDCHI2"                        , &Jpsi_BPVVDCHI2                          , "Jpsi_BPVVDCHI2/D"                      );
  tree->Branch("Jpsi_BPVVDZ"                           , &Jpsi_BPVVDZ                             , "Jpsi_BPVVDZ/D"                         );
  tree->Branch("Jpsi_ETA"                              , &Jpsi_ETA                                , "Jpsi_ETA/D"                            );
  tree->Branch("muplus_MINIP"                          , &muplus_MINIP                            , "muplus_MINIP/D"                        );
  tree->Branch("muplus_MINIPCHI2"                      , &muplus_MINIPCHI2                        , "muplus_MINIPCHI2/D"                    );
  tree->Branch("muplus_CosTheta"                       , &muplus_CosTheta                         , "muplus_CosTheta/D"                     );
  tree->Branch("muplus_OWNPV_X"                        , &muplus_OWNPV_X                          , "muplus_OWNPV_X/D"                      );
  tree->Branch("muplus_OWNPV_Y"                        , &muplus_OWNPV_Y                          , "muplus_OWNPV_Y/D"                      );
  tree->Branch("muplus_OWNPV_Z"                        , &muplus_OWNPV_Z                          , "muplus_OWNPV_Z/D"                      );
  tree->Branch("muplus_OWNPV_XERR"                     , &muplus_OWNPV_XERR                       , "muplus_OWNPV_XERR/D"                   );
  tree->Branch("muplus_OWNPV_YERR"                     , &muplus_OWNPV_YERR                       , "muplus_OWNPV_YERR/D"                   );
  tree->Branch("muplus_OWNPV_ZERR"                     , &muplus_OWNPV_ZERR                       , "muplus_OWNPV_ZERR/D"                   );
  tree->Branch("muplus_OWNPV_CHI2"                     , &muplus_OWNPV_CHI2                       , "muplus_OWNPV_CHI2/D"                   );
  tree->Branch("muplus_OWNPV_NDOF"                     , &muplus_OWNPV_NDOF                       , "muplus_OWNPV_NDOF/I"                   );
  tree->Branch("muplus_IP_OWNPV"                       , &muplus_IP_OWNPV                         , "muplus_IP_OWNPV/D"                     );
  tree->Branch("muplus_IPCHI2_OWNPV"                   , &muplus_IPCHI2_OWNPV                     , "muplus_IPCHI2_OWNPV/D"                 );
  tree->Branch("muplus_ORIVX_X"                        , &muplus_ORIVX_X                          , "muplus_ORIVX_X/D"                      );
  tree->Branch("muplus_ORIVX_Y"                        , &muplus_ORIVX_Y                          , "muplus_ORIVX_Y/D"                      );
  tree->Branch("muplus_ORIVX_Z"                        , &muplus_ORIVX_Z                          , "muplus_ORIVX_Z/D"                      );
  tree->Branch("muplus_ORIVX_XERR"                     , &muplus_ORIVX_XERR                       , "muplus_ORIVX_XERR/D"                   );
  tree->Branch("muplus_ORIVX_YERR"                     , &muplus_ORIVX_YERR                       , "muplus_ORIVX_YERR/D"                   );
  tree->Branch("muplus_ORIVX_ZERR"                     , &muplus_ORIVX_ZERR                       , "muplus_ORIVX_ZERR/D"                   );
  tree->Branch("muplus_ORIVX_CHI2"                     , &muplus_ORIVX_CHI2                       , "muplus_ORIVX_CHI2/D"                   );
  tree->Branch("muplus_ORIVX_NDOF"                     , &muplus_ORIVX_NDOF                       , "muplus_ORIVX_NDOF/I"                   );
  tree->Branch("muplus_P"                              , &muplus_P                                , "muplus_P/D"                            );
  tree->Branch("muplus_PT"                             , &muplus_PT                               , "muplus_PT/D"                           );
  tree->Branch("muplus_PE"                             , &muplus_PE                               , "muplus_PE/D"                           );
  tree->Branch("muplus_PX"                             , &muplus_PX                               , "muplus_PX/D"                           );
  tree->Branch("muplus_PY"                             , &muplus_PY                               , "muplus_PY/D"                           );
  tree->Branch("muplus_PZ"                             , &muplus_PZ                               , "muplus_PZ/D"                           );
  tree->Branch("muplus_M"                              , &muplus_M                                , "muplus_M/D"                            );
  tree->Branch("muplus_ID"                             , &muplus_ID                               , "muplus_ID/I"                           );
  tree->Branch("muplus_PIDe"                           , &muplus_PIDe                             , "muplus_PIDe/D"                         );
  tree->Branch("muplus_PIDmu"                          , &muplus_PIDmu                            , "muplus_PIDmu/D"                        );
  tree->Branch("muplus_PIDK"                           , &muplus_PIDK                             , "muplus_PIDK/D"                         );
  tree->Branch("muplus_PIDp"                           , &muplus_PIDp                             , "muplus_PIDp/D"                         );
  tree->Branch("muplus_ProbNNe"                        , &muplus_ProbNNe                          , "muplus_ProbNNe/D"                      );
  tree->Branch("muplus_ProbNNk"                        , &muplus_ProbNNk                          , "muplus_ProbNNk/D"                      );
  tree->Branch("muplus_ProbNNp"                        , &muplus_ProbNNp                          , "muplus_ProbNNp/D"                      );
  tree->Branch("muplus_ProbNNpi"                       , &muplus_ProbNNpi                         , "muplus_ProbNNpi/D"                     );
  tree->Branch("muplus_ProbNNmu"                       , &muplus_ProbNNmu                         , "muplus_ProbNNmu/D"                     );
  tree->Branch("muplus_ProbNNghost"                    , &muplus_ProbNNghost                      , "muplus_ProbNNghost/D"                  );
  tree->Branch("muplus_ETA"                            , &muplus_ETA                              , "muplus_ETA/D"                          );
  tree->Branch("muplus_MIPCHI2PV"                      , &muplus_MIPCHI2PV                        , "muplus_MIPCHI2PV/D"                    );
  tree->Branch("muplus_TRCHI2DOF"                      , &muplus_TRCHI2DOF                        , "muplus_TRCHI2DOF/D"                    );
  tree->Branch("muplus_TRGHOSTPROB"                    , &muplus_TRGHOSTPROB                      , "muplus_TRGHOSTPROB/D"                  );
  tree->Branch("muminus_MINIP"                         , &muminus_MINIP                           , "muminus_MINIP/D"                       );
  tree->Branch("muminus_MINIPCHI2"                     , &muminus_MINIPCHI2                       , "muminus_MINIPCHI2/D"                   );
  tree->Branch("muminus_CosTheta"                      , &muminus_CosTheta                        , "muminus_CosTheta/D"                    );
  tree->Branch("muminus_OWNPV_X"                       , &muminus_OWNPV_X                         , "muminus_OWNPV_X/D"                     );
  tree->Branch("muminus_OWNPV_Y"                       , &muminus_OWNPV_Y                         , "muminus_OWNPV_Y/D"                     );
  tree->Branch("muminus_OWNPV_Z"                       , &muminus_OWNPV_Z                         , "muminus_OWNPV_Z/D"                     );
  tree->Branch("muminus_OWNPV_XERR"                    , &muminus_OWNPV_XERR                      , "muminus_OWNPV_XERR/D"                  );
  tree->Branch("muminus_OWNPV_YERR"                    , &muminus_OWNPV_YERR                      , "muminus_OWNPV_YERR/D"                  );
  tree->Branch("muminus_OWNPV_ZERR"                    , &muminus_OWNPV_ZERR                      , "muminus_OWNPV_ZERR/D"                  );
  tree->Branch("muminus_OWNPV_CHI2"                    , &muminus_OWNPV_CHI2                      , "muminus_OWNPV_CHI2/D"                  );
  tree->Branch("muminus_OWNPV_NDOF"                    , &muminus_OWNPV_NDOF                      , "muminus_OWNPV_NDOF/I"                  );
  tree->Branch("muminus_IP_OWNPV"                      , &muminus_IP_OWNPV                        , "muminus_IP_OWNPV/D"                    );
  tree->Branch("muminus_IPCHI2_OWNPV"                  , &muminus_IPCHI2_OWNPV                    , "muminus_IPCHI2_OWNPV/D"                );
  tree->Branch("muminus_ORIVX_X"                       , &muminus_ORIVX_X                         , "muminus_ORIVX_X/D"                     );
  tree->Branch("muminus_ORIVX_Y"                       , &muminus_ORIVX_Y                         , "muminus_ORIVX_Y/D"                     );
  tree->Branch("muminus_ORIVX_Z"                       , &muminus_ORIVX_Z                         , "muminus_ORIVX_Z/D"                     );
  tree->Branch("muminus_ORIVX_XERR"                    , &muminus_ORIVX_XERR                      , "muminus_ORIVX_XERR/D"                  );
  tree->Branch("muminus_ORIVX_YERR"                    , &muminus_ORIVX_YERR                      , "muminus_ORIVX_YERR/D"                  );
  tree->Branch("muminus_ORIVX_ZERR"                    , &muminus_ORIVX_ZERR                      , "muminus_ORIVX_ZERR/D"                  );
  tree->Branch("muminus_ORIVX_CHI2"                    , &muminus_ORIVX_CHI2                      , "muminus_ORIVX_CHI2/D"                  );
  tree->Branch("muminus_ORIVX_NDOF"                    , &muminus_ORIVX_NDOF                      , "muminus_ORIVX_NDOF/I"                  );
  tree->Branch("muminus_P"                             , &muminus_P                               , "muminus_P/D"                           );
  tree->Branch("muminus_PT"                            , &muminus_PT                              , "muminus_PT/D"                          );
  tree->Branch("muminus_PE"                            , &muminus_PE                              , "muminus_PE/D"                          );
  tree->Branch("muminus_PX"                            , &muminus_PX                              , "muminus_PX/D"                          );
  tree->Branch("muminus_PY"                            , &muminus_PY                              , "muminus_PY/D"                          );
  tree->Branch("muminus_PZ"                            , &muminus_PZ                              , "muminus_PZ/D"                          );
  tree->Branch("muminus_M"                             , &muminus_M                               , "muminus_M/D"                           );
  tree->Branch("muminus_ID"                            , &muminus_ID                              , "muminus_ID/I"                          );
  tree->Branch("muminus_PIDe"                          , &muminus_PIDe                            , "muminus_PIDe/D"                        );
  tree->Branch("muminus_PIDmu"                         , &muminus_PIDmu                           , "muminus_PIDmu/D"                       );
  tree->Branch("muminus_PIDK"                          , &muminus_PIDK                            , "muminus_PIDK/D"                        );
  tree->Branch("muminus_PIDp"                          , &muminus_PIDp                            , "muminus_PIDp/D"                        );
  tree->Branch("muminus_ProbNNe"                       , &muminus_ProbNNe                         , "muminus_ProbNNe/D"                     );
  tree->Branch("muminus_ProbNNk"                       , &muminus_ProbNNk                         , "muminus_ProbNNk/D"                     );
  tree->Branch("muminus_ProbNNp"                       , &muminus_ProbNNp                         , "muminus_ProbNNp/D"                     );
  tree->Branch("muminus_ProbNNpi"                      , &muminus_ProbNNpi                        , "muminus_ProbNNpi/D"                    );
  tree->Branch("muminus_ProbNNmu"                      , &muminus_ProbNNmu                        , "muminus_ProbNNmu/D"                    );
  tree->Branch("muminus_ProbNNghost"                   , &muminus_ProbNNghost                     , "muminus_ProbNNghost/D"                 );
  tree->Branch("muminus_ETA"                           , &muminus_ETA                             , "muminus_ETA/D"                         );
  tree->Branch("muminus_MIPCHI2PV"                     , &muminus_MIPCHI2PV                       , "muminus_MIPCHI2PV/D"                   );
  tree->Branch("muminus_TRCHI2DOF"                     , &muminus_TRCHI2DOF                       , "muminus_TRCHI2DOF/D"                   );
  tree->Branch("muminus_TRGHOSTPROB"                   , &muminus_TRGHOSTPROB                     , "muminus_TRGHOSTPROB/D"                 );
  tree->Branch("phi_MINIP"                             , &phi_MINIP                               , "phi_MINIP/D"                           );
  tree->Branch("phi_MINIPCHI2"                         , &phi_MINIPCHI2                           , "phi_MINIPCHI2/D"                       );
  tree->Branch("phi_CosTheta"                          , &phi_CosTheta                            , "phi_CosTheta/D"                        );
  tree->Branch("phi_ENDVERTEX_X"                       , &phi_ENDVERTEX_X                         , "phi_ENDVERTEX_X/D"                     );
  tree->Branch("phi_ENDVERTEX_Y"                       , &phi_ENDVERTEX_Y                         , "phi_ENDVERTEX_Y/D"                     );
  tree->Branch("phi_ENDVERTEX_Z"                       , &phi_ENDVERTEX_Z                         , "phi_ENDVERTEX_Z/D"                     );
  tree->Branch("phi_ENDVERTEX_XERR"                    , &phi_ENDVERTEX_XERR                      , "phi_ENDVERTEX_XERR/D"                  );
  tree->Branch("phi_ENDVERTEX_YERR"                    , &phi_ENDVERTEX_YERR                      , "phi_ENDVERTEX_YERR/D"                  );
  tree->Branch("phi_ENDVERTEX_ZERR"                    , &phi_ENDVERTEX_ZERR                      , "phi_ENDVERTEX_ZERR/D"                  );
  tree->Branch("phi_ENDVERTEX_CHI2"                    , &phi_ENDVERTEX_CHI2                      , "phi_ENDVERTEX_CHI2/D"                  );
  tree->Branch("phi_ENDVERTEX_NDOF"                    , &phi_ENDVERTEX_NDOF                      , "phi_ENDVERTEX_NDOF/I"                  );
  tree->Branch("phi_OWNPV_X"                           , &phi_OWNPV_X                             , "phi_OWNPV_X/D"                         );
  tree->Branch("phi_OWNPV_Y"                           , &phi_OWNPV_Y                             , "phi_OWNPV_Y/D"                         );
  tree->Branch("phi_OWNPV_Z"                           , &phi_OWNPV_Z                             , "phi_OWNPV_Z/D"                         );
  tree->Branch("phi_OWNPV_XERR"                        , &phi_OWNPV_XERR                          , "phi_OWNPV_XERR/D"                      );
  tree->Branch("phi_OWNPV_YERR"                        , &phi_OWNPV_YERR                          , "phi_OWNPV_YERR/D"                      );
  tree->Branch("phi_OWNPV_ZERR"                        , &phi_OWNPV_ZERR                          , "phi_OWNPV_ZERR/D"                      );
  tree->Branch("phi_OWNPV_CHI2"                        , &phi_OWNPV_CHI2                          , "phi_OWNPV_CHI2/D"                      );
  tree->Branch("phi_OWNPV_NDOF"                        , &phi_OWNPV_NDOF                          , "phi_OWNPV_NDOF/I"                      );
  tree->Branch("phi_IP_OWNPV"                          , &phi_IP_OWNPV                            , "phi_IP_OWNPV/D"                        );
  tree->Branch("phi_IPCHI2_OWNPV"                      , &phi_IPCHI2_OWNPV                        , "phi_IPCHI2_OWNPV/D"                    );
  tree->Branch("phi_FD_OWNPV"                          , &phi_FD_OWNPV                            , "phi_FD_OWNPV/D"                        );
  tree->Branch("phi_FDCHI2_OWNPV"                      , &phi_FDCHI2_OWNPV                        , "phi_FDCHI2_OWNPV/D"                    );
  tree->Branch("phi_DIRA_OWNPV"                        , &phi_DIRA_OWNPV                          , "phi_DIRA_OWNPV/D"                      );
  tree->Branch("phi_ORIVX_X"                           , &phi_ORIVX_X                             , "phi_ORIVX_X/D"                         );
  tree->Branch("phi_ORIVX_Y"                           , &phi_ORIVX_Y                             , "phi_ORIVX_Y/D"                         );
  tree->Branch("phi_ORIVX_Z"                           , &phi_ORIVX_Z                             , "phi_ORIVX_Z/D"                         );
  tree->Branch("phi_ORIVX_XERR"                        , &phi_ORIVX_XERR                          , "phi_ORIVX_XERR/D"                      );
  tree->Branch("phi_ORIVX_YERR"                        , &phi_ORIVX_YERR                          , "phi_ORIVX_YERR/D"                      );
  tree->Branch("phi_ORIVX_ZERR"                        , &phi_ORIVX_ZERR                          , "phi_ORIVX_ZERR/D"                      );
  tree->Branch("phi_ORIVX_CHI2"                        , &phi_ORIVX_CHI2                          , "phi_ORIVX_CHI2/D"                      );
  tree->Branch("phi_ORIVX_NDOF"                        , &phi_ORIVX_NDOF                          , "phi_ORIVX_NDOF/I"                      );
  tree->Branch("phi_FD_ORIVX"                          , &phi_FD_ORIVX                            , "phi_FD_ORIVX/D"                        );
  tree->Branch("phi_FDCHI2_ORIVX"                      , &phi_FDCHI2_ORIVX                        , "phi_FDCHI2_ORIVX/D"                    );
  tree->Branch("phi_DIRA_ORIVX"                        , &phi_DIRA_ORIVX                          , "phi_DIRA_ORIVX/D"                      );
  tree->Branch("phi_P"                                 , &phi_P                                   , "phi_P/D"                               );
  tree->Branch("phi_PT"                                , &phi_PT                                  , "phi_PT/D"                              );
  tree->Branch("phi_PE"                                , &phi_PE                                  , "phi_PE/D"                              );
  tree->Branch("phi_PX"                                , &phi_PX                                  , "phi_PX/D"                              );
  tree->Branch("phi_PY"                                , &phi_PY                                  , "phi_PY/D"                              );
  tree->Branch("phi_PZ"                                , &phi_PZ                                  , "phi_PZ/D"                              );
  tree->Branch("phi_M"                                 , &phi_M                                   , "phi_M/D"                               );
  tree->Branch("phi_BKGCAT"                            , &phi_BKGCAT                              , "phi_BKGCAT/I"                          );
  tree->Branch("phi_ID"                                , &phi_ID                                  , "phi_ID/I"                              );
  tree->Branch("phi_BPVDIRA"                           , &phi_BPVDIRA                             , "phi_BPVDIRA/D"                         );
  tree->Branch("phi_BPVIPCHI2"                         , &phi_BPVIPCHI2                           , "phi_BPVIPCHI2/D"                       );
  tree->Branch("phi_BPVLTIME"                          , &phi_BPVLTIME                            , "phi_BPVLTIME/D"                        );
  tree->Branch("phi_BPVVDCHI2"                         , &phi_BPVVDCHI2                           , "phi_BPVVDCHI2/D"                       );
  tree->Branch("phi_BPVVDZ"                            , &phi_BPVVDZ                              , "phi_BPVVDZ/D"                          );
  tree->Branch("phi_ETA"                               , &phi_ETA                                 , "phi_ETA/D"                             );
  tree->Branch("Kplus_MINIP"                           , &Kplus_MINIP                             , "Kplus_MINIP/D"                         );
  tree->Branch("Kplus_MINIPCHI2"                       , &Kplus_MINIPCHI2                         , "Kplus_MINIPCHI2/D"                     );
  tree->Branch("Kplus_CosTheta"                        , &Kplus_CosTheta                          , "Kplus_CosTheta/D"                      );
  tree->Branch("Kplus_OWNPV_X"                         , &Kplus_OWNPV_X                           , "Kplus_OWNPV_X/D"                       );
  tree->Branch("Kplus_OWNPV_Y"                         , &Kplus_OWNPV_Y                           , "Kplus_OWNPV_Y/D"                       );
  tree->Branch("Kplus_OWNPV_Z"                         , &Kplus_OWNPV_Z                           , "Kplus_OWNPV_Z/D"                       );
  tree->Branch("Kplus_OWNPV_XERR"                      , &Kplus_OWNPV_XERR                        , "Kplus_OWNPV_XERR/D"                    );
  tree->Branch("Kplus_OWNPV_YERR"                      , &Kplus_OWNPV_YERR                        , "Kplus_OWNPV_YERR/D"                    );
  tree->Branch("Kplus_OWNPV_ZERR"                      , &Kplus_OWNPV_ZERR                        , "Kplus_OWNPV_ZERR/D"                    );
  tree->Branch("Kplus_OWNPV_CHI2"                      , &Kplus_OWNPV_CHI2                        , "Kplus_OWNPV_CHI2/D"                    );
  tree->Branch("Kplus_OWNPV_NDOF"                      , &Kplus_OWNPV_NDOF                        , "Kplus_OWNPV_NDOF/I"                    );
  tree->Branch("Kplus_IP_OWNPV"                        , &Kplus_IP_OWNPV                          , "Kplus_IP_OWNPV/D"                      );
  tree->Branch("Kplus_IPCHI2_OWNPV"                    , &Kplus_IPCHI2_OWNPV                      , "Kplus_IPCHI2_OWNPV/D"                  );
  tree->Branch("Kplus_ORIVX_X"                         , &Kplus_ORIVX_X                           , "Kplus_ORIVX_X/D"                       );
  tree->Branch("Kplus_ORIVX_Y"                         , &Kplus_ORIVX_Y                           , "Kplus_ORIVX_Y/D"                       );
  tree->Branch("Kplus_ORIVX_Z"                         , &Kplus_ORIVX_Z                           , "Kplus_ORIVX_Z/D"                       );
  tree->Branch("Kplus_ORIVX_XERR"                      , &Kplus_ORIVX_XERR                        , "Kplus_ORIVX_XERR/D"                    );
  tree->Branch("Kplus_ORIVX_YERR"                      , &Kplus_ORIVX_YERR                        , "Kplus_ORIVX_YERR/D"                    );
  tree->Branch("Kplus_ORIVX_ZERR"                      , &Kplus_ORIVX_ZERR                        , "Kplus_ORIVX_ZERR/D"                    );
  tree->Branch("Kplus_ORIVX_CHI2"                      , &Kplus_ORIVX_CHI2                        , "Kplus_ORIVX_CHI2/D"                    );
  tree->Branch("Kplus_ORIVX_NDOF"                      , &Kplus_ORIVX_NDOF                        , "Kplus_ORIVX_NDOF/I"                    );
  tree->Branch("Kplus_P"                               , &Kplus_P                                 , "Kplus_P/D"                             );
  tree->Branch("Kplus_PT"                              , &Kplus_PT                                , "Kplus_PT/D"                            );
  tree->Branch("Kplus_PE"                              , &Kplus_PE                                , "Kplus_PE/D"                            );
  tree->Branch("Kplus_PX"                              , &Kplus_PX                                , "Kplus_PX/D"                            );
  tree->Branch("Kplus_PY"                              , &Kplus_PY                                , "Kplus_PY/D"                            );
  tree->Branch("Kplus_PZ"                              , &Kplus_PZ                                , "Kplus_PZ/D"                            );
  tree->Branch("Kplus_M"                               , &Kplus_M                                 , "Kplus_M/D"                             );
  tree->Branch("Kplus_ID"                              , &Kplus_ID                                , "Kplus_ID/I"                            );
  tree->Branch("Kplus_PIDe"                            , &Kplus_PIDe                              , "Kplus_PIDe/D"                          );
  tree->Branch("Kplus_PIDmu"                           , &Kplus_PIDmu                             , "Kplus_PIDmu/D"                         );
  tree->Branch("Kplus_PIDK"                            , &Kplus_PIDK                              , "Kplus_PIDK/D"                          );
  tree->Branch("Kplus_PIDp"                            , &Kplus_PIDp                              , "Kplus_PIDp/D"                          );
  tree->Branch("Kplus_ProbNNe"                         , &Kplus_ProbNNe                           , "Kplus_ProbNNe/D"                       );
  tree->Branch("Kplus_ProbNNk"                         , &Kplus_ProbNNk                           , "Kplus_ProbNNk/D"                       );
  tree->Branch("Kplus_ProbNNp"                         , &Kplus_ProbNNp                           , "Kplus_ProbNNp/D"                       );
  tree->Branch("Kplus_ProbNNpi"                        , &Kplus_ProbNNpi                          , "Kplus_ProbNNpi/D"                      );
  tree->Branch("Kplus_ProbNNmu"                        , &Kplus_ProbNNmu                          , "Kplus_ProbNNmu/D"                      );
  tree->Branch("Kplus_ProbNNghost"                     , &Kplus_ProbNNghost                       , "Kplus_ProbNNghost/D"                   );
  tree->Branch("Kplus_ETA"                             , &Kplus_ETA                               , "Kplus_ETA/D"                           );
  tree->Branch("Kplus_MIPCHI2PV"                       , &Kplus_MIPCHI2PV                         , "Kplus_MIPCHI2PV/D"                     );
  tree->Branch("Kplus_TRCHI2DOF"                       , &Kplus_TRCHI2DOF                         , "Kplus_TRCHI2DOF/D"                     );
  tree->Branch("Kplus_TRGHOSTPROB"                     , &Kplus_TRGHOSTPROB                       , "Kplus_TRGHOSTPROB/D"                   );
  tree->Branch("Kminus_MINIP"                          , &Kminus_MINIP                            , "Kminus_MINIP/D"                        );
  tree->Branch("Kminus_MINIPCHI2"                      , &Kminus_MINIPCHI2                        , "Kminus_MINIPCHI2/D"                    );
  tree->Branch("Kminus_CosTheta"                       , &Kminus_CosTheta                         , "Kminus_CosTheta/D"                     );
  tree->Branch("Kminus_OWNPV_X"                        , &Kminus_OWNPV_X                          , "Kminus_OWNPV_X/D"                      );
  tree->Branch("Kminus_OWNPV_Y"                        , &Kminus_OWNPV_Y                          , "Kminus_OWNPV_Y/D"                      );
  tree->Branch("Kminus_OWNPV_Z"                        , &Kminus_OWNPV_Z                          , "Kminus_OWNPV_Z/D"                      );
  tree->Branch("Kminus_OWNPV_XERR"                     , &Kminus_OWNPV_XERR                       , "Kminus_OWNPV_XERR/D"                   );
  tree->Branch("Kminus_OWNPV_YERR"                     , &Kminus_OWNPV_YERR                       , "Kminus_OWNPV_YERR/D"                   );
  tree->Branch("Kminus_OWNPV_ZERR"                     , &Kminus_OWNPV_ZERR                       , "Kminus_OWNPV_ZERR/D"                   );
  tree->Branch("Kminus_OWNPV_CHI2"                     , &Kminus_OWNPV_CHI2                       , "Kminus_OWNPV_CHI2/D"                   );
  tree->Branch("Kminus_OWNPV_NDOF"                     , &Kminus_OWNPV_NDOF                       , "Kminus_OWNPV_NDOF/I"                   );
  tree->Branch("Kminus_IP_OWNPV"                       , &Kminus_IP_OWNPV                         , "Kminus_IP_OWNPV/D"                     );
  tree->Branch("Kminus_IPCHI2_OWNPV"                   , &Kminus_IPCHI2_OWNPV                     , "Kminus_IPCHI2_OWNPV/D"                 );
  tree->Branch("Kminus_ORIVX_X"                        , &Kminus_ORIVX_X                          , "Kminus_ORIVX_X/D"                      );
  tree->Branch("Kminus_ORIVX_Y"                        , &Kminus_ORIVX_Y                          , "Kminus_ORIVX_Y/D"                      );
  tree->Branch("Kminus_ORIVX_Z"                        , &Kminus_ORIVX_Z                          , "Kminus_ORIVX_Z/D"                      );
  tree->Branch("Kminus_ORIVX_XERR"                     , &Kminus_ORIVX_XERR                       , "Kminus_ORIVX_XERR/D"                   );
  tree->Branch("Kminus_ORIVX_YERR"                     , &Kminus_ORIVX_YERR                       , "Kminus_ORIVX_YERR/D"                   );
  tree->Branch("Kminus_ORIVX_ZERR"                     , &Kminus_ORIVX_ZERR                       , "Kminus_ORIVX_ZERR/D"                   );
  tree->Branch("Kminus_ORIVX_CHI2"                     , &Kminus_ORIVX_CHI2                       , "Kminus_ORIVX_CHI2/D"                   );
  tree->Branch("Kminus_ORIVX_NDOF"                     , &Kminus_ORIVX_NDOF                       , "Kminus_ORIVX_NDOF/I"                   );
  tree->Branch("Kminus_P"                              , &Kminus_P                                , "Kminus_P/D"                            );
  tree->Branch("Kminus_PT"                             , &Kminus_PT                               , "Kminus_PT/D"                           );
  tree->Branch("Kminus_PE"                             , &Kminus_PE                               , "Kminus_PE/D"                           );
  tree->Branch("Kminus_PX"                             , &Kminus_PX                               , "Kminus_PX/D"                           );
  tree->Branch("Kminus_PY"                             , &Kminus_PY                               , "Kminus_PY/D"                           );
  tree->Branch("Kminus_PZ"                             , &Kminus_PZ                               , "Kminus_PZ/D"                           );
  tree->Branch("Kminus_M"                              , &Kminus_M                                , "Kminus_M/D"                            );
  tree->Branch("Kminus_ID"                             , &Kminus_ID                               , "Kminus_ID/I"                           );
  tree->Branch("Kminus_PIDe"                           , &Kminus_PIDe                             , "Kminus_PIDe/D"                         );
  tree->Branch("Kminus_PIDmu"                          , &Kminus_PIDmu                            , "Kminus_PIDmu/D"                        );
  tree->Branch("Kminus_PIDK"                           , &Kminus_PIDK                             , "Kminus_PIDK/D"                         );
  tree->Branch("Kminus_PIDp"                           , &Kminus_PIDp                             , "Kminus_PIDp/D"                         );
  tree->Branch("Kminus_ProbNNe"                        , &Kminus_ProbNNe                          , "Kminus_ProbNNe/D"                      );
  tree->Branch("Kminus_ProbNNk"                        , &Kminus_ProbNNk                          , "Kminus_ProbNNk/D"                      );
  tree->Branch("Kminus_ProbNNp"                        , &Kminus_ProbNNp                          , "Kminus_ProbNNp/D"                      );
  tree->Branch("Kminus_ProbNNpi"                       , &Kminus_ProbNNpi                         , "Kminus_ProbNNpi/D"                     );
  tree->Branch("Kminus_ProbNNmu"                       , &Kminus_ProbNNmu                         , "Kminus_ProbNNmu/D"                     );
  tree->Branch("Kminus_ProbNNghost"                    , &Kminus_ProbNNghost                      , "Kminus_ProbNNghost/D"                  );
  tree->Branch("Kminus_ETA"                            , &Kminus_ETA                              , "Kminus_ETA/D"                          );
  tree->Branch("Kminus_MIPCHI2PV"                      , &Kminus_MIPCHI2PV                        , "Kminus_MIPCHI2PV/D"                    );
  tree->Branch("Kminus_TRCHI2DOF"                      , &Kminus_TRCHI2DOF                        , "Kminus_TRCHI2DOF/D"                    );
  tree->Branch("Kminus_TRGHOSTPROB"                    , &Kminus_TRGHOSTPROB                      , "Kminus_TRGHOSTPROB/D"                  );
  tree->Branch("Pibach_MINIP"                          , &Pibach_MINIP                            , "Pibach_MINIP/D"                        );
  tree->Branch("Pibach_MINIPCHI2"                      , &Pibach_MINIPCHI2                        , "Pibach_MINIPCHI2/D"                    );
  tree->Branch("Pibach_CosTheta"                       , &Pibach_CosTheta                         , "Pibach_CosTheta/D"                     );
  tree->Branch("Pibach_OWNPV_X"                        , &Pibach_OWNPV_X                          , "Pibach_OWNPV_X/D"                      );
  tree->Branch("Pibach_OWNPV_Y"                        , &Pibach_OWNPV_Y                          , "Pibach_OWNPV_Y/D"                      );
  tree->Branch("Pibach_OWNPV_Z"                        , &Pibach_OWNPV_Z                          , "Pibach_OWNPV_Z/D"                      );
  tree->Branch("Pibach_OWNPV_XERR"                     , &Pibach_OWNPV_XERR                       , "Pibach_OWNPV_XERR/D"                   );
  tree->Branch("Pibach_OWNPV_YERR"                     , &Pibach_OWNPV_YERR                       , "Pibach_OWNPV_YERR/D"                   );
  tree->Branch("Pibach_OWNPV_ZERR"                     , &Pibach_OWNPV_ZERR                       , "Pibach_OWNPV_ZERR/D"                   );
  tree->Branch("Pibach_OWNPV_CHI2"                     , &Pibach_OWNPV_CHI2                       , "Pibach_OWNPV_CHI2/D"                   );
  tree->Branch("Pibach_OWNPV_NDOF"                     , &Pibach_OWNPV_NDOF                       , "Pibach_OWNPV_NDOF/I"                   );
  tree->Branch("Pibach_IP_OWNPV"                       , &Pibach_IP_OWNPV                         , "Pibach_IP_OWNPV/D"                     );
  tree->Branch("Pibach_IPCHI2_OWNPV"                   , &Pibach_IPCHI2_OWNPV                     , "Pibach_IPCHI2_OWNPV/D"                 );
  tree->Branch("Pibach_ORIVX_X"                        , &Pibach_ORIVX_X                          , "Pibach_ORIVX_X/D"                      );
  tree->Branch("Pibach_ORIVX_Y"                        , &Pibach_ORIVX_Y                          , "Pibach_ORIVX_Y/D"                      );
  tree->Branch("Pibach_ORIVX_Z"                        , &Pibach_ORIVX_Z                          , "Pibach_ORIVX_Z/D"                      );
  tree->Branch("Pibach_ORIVX_XERR"                     , &Pibach_ORIVX_XERR                       , "Pibach_ORIVX_XERR/D"                   );
  tree->Branch("Pibach_ORIVX_YERR"                     , &Pibach_ORIVX_YERR                       , "Pibach_ORIVX_YERR/D"                   );
  tree->Branch("Pibach_ORIVX_ZERR"                     , &Pibach_ORIVX_ZERR                       , "Pibach_ORIVX_ZERR/D"                   );
  tree->Branch("Pibach_ORIVX_CHI2"                     , &Pibach_ORIVX_CHI2                       , "Pibach_ORIVX_CHI2/D"                   );
  tree->Branch("Pibach_ORIVX_NDOF"                     , &Pibach_ORIVX_NDOF                       , "Pibach_ORIVX_NDOF/I"                   );
  tree->Branch("Pibach_P"                              , &Pibach_P                                , "Pibach_P/D"                            );
  tree->Branch("Pibach_PT"                             , &Pibach_PT                               , "Pibach_PT/D"                           );
  tree->Branch("Pibach_PE"                             , &Pibach_PE                               , "Pibach_PE/D"                           );
  tree->Branch("Pibach_PX"                             , &Pibach_PX                               , "Pibach_PX/D"                           );
  tree->Branch("Pibach_PY"                             , &Pibach_PY                               , "Pibach_PY/D"                           );
  tree->Branch("Pibach_PZ"                             , &Pibach_PZ                               , "Pibach_PZ/D"                           );
  tree->Branch("Pibach_M"                              , &Pibach_M                                , "Pibach_M/D"                            );
  tree->Branch("Pibach_ID"                             , &Pibach_ID                               , "Pibach_ID/I"                           );
  tree->Branch("Pibach_PIDe"                           , &Pibach_PIDe                             , "Pibach_PIDe/D"                         );
  tree->Branch("Pibach_PIDmu"                          , &Pibach_PIDmu                            , "Pibach_PIDmu/D"                        );
  tree->Branch("Pibach_PIDK"                           , &Pibach_PIDK                             , "Pibach_PIDK/D"                         );
  tree->Branch("Pibach_PIDp"                           , &Pibach_PIDp                             , "Pibach_PIDp/D"                         );
  tree->Branch("Pibach_ProbNNe"                        , &Pibach_ProbNNe                          , "Pibach_ProbNNe/D"                      );
  tree->Branch("Pibach_ProbNNk"                        , &Pibach_ProbNNk                          , "Pibach_ProbNNk/D"                      );
  tree->Branch("Pibach_ProbNNp"                        , &Pibach_ProbNNp                          , "Pibach_ProbNNp/D"                      );
  tree->Branch("Pibach_ProbNNpi"                       , &Pibach_ProbNNpi                         , "Pibach_ProbNNpi/D"                     );
  tree->Branch("Pibach_ProbNNmu"                       , &Pibach_ProbNNmu                         , "Pibach_ProbNNmu/D"                     );
  tree->Branch("Pibach_ProbNNghost"                    , &Pibach_ProbNNghost                      , "Pibach_ProbNNghost/D"                  );
  tree->Branch("Pibach_ETA"                            , &Pibach_ETA                              , "Pibach_ETA/D"                          );
  tree->Branch("Pibach_MIPCHI2PV"                      , &Pibach_MIPCHI2PV                        , "Pibach_MIPCHI2PV/D"                    );
  tree->Branch("Pibach_TRCHI2DOF"                      , &Pibach_TRCHI2DOF                        , "Pibach_TRCHI2DOF/D"                    );
  tree->Branch("Pibach_TRGHOSTPROB"                    , &Pibach_TRGHOSTPROB                      , "Pibach_TRGHOSTPROB/D"                  );
  tree->Branch("nCandidate"                            , &nCandidate                              , "nCandidate/i"                          );
  tree->Branch("totCandidates"                         , &totCandidates                           , "totCandidates/l"                       );
  tree->Branch("runNumber"                             , &runNumber                               , "runNumber/i"                           );
  tree->Branch("eventNumber"                           , &eventNumber                             , "eventNumber/l"                         );
  tree->Branch("Polarity"                              , &Polarity                                , "Polarity/S"                            );
  tree->Branch("PVX"                                   , &PVX                                     , "PVX[nPV]/F"                            );
  tree->Branch("PVY"                                   , &PVY                                     , "PVY[nPV]/F"                            );
  tree->Branch("PVZ"                                   , &PVZ                                     , "PVZ[nPV]/F"                            );
  tree->Branch("PVXERR"                                , &PVXERR                                  , "PVXERR[nPV]/F"                         );
  tree->Branch("PVYERR"                                , &PVYERR                                  , "PVYERR[nPV]/F"                         );
  tree->Branch("PVZERR"                                , &PVZERR                                  , "PVZERR[nPV]/F"                         );
  tree->Branch("PVCHI2"                                , &PVCHI2                                  , "PVCHI2[nPV]/F"                         );
  tree->Branch("PVNDOF"                                , &PVNDOF                                  , "PVNDOF[nPV]/F"                         );
  tree->Branch("PVNTRACKS"                             , &PVNTRACKS                               , "PVNTRACKS[nPV]/F"                      );
  tree->Branch("nPVs"                                  , &nPVs                                    , "nPVs/I"                                );
  tree->Branch("nTracks"                               , &nTracks                                 , "nTracks/I"                             );
}

