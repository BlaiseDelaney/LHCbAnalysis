#include "Variables_Analysis.h"

Dst2D0pi::Variables_Analysis::Variables_Analysis(){}
Dst2D0pi::Variables_Analysis::~Variables_Analysis(){}

void Dst2D0pi::Variables_Analysis::setInputBranches(TTree *tree) {
  tree->SetBranchAddress("Dst_BPVVDZ"                            , &Dst_BPVVDZ                              );
  tree->SetBranchAddress("Dst_DIRA_OWNPV"                        , &Dst_DIRA_OWNPV                          );
  tree->SetBranchAddress("Dst_ENDVERTEX_CHI2"                    , &Dst_ENDVERTEX_CHI2                      );
  tree->SetBranchAddress("Dst_FD_CHI2"                           , &Dst_FD_CHI2                             );
  tree->SetBranchAddress("Dst_MINIP"                             , &Dst_MINIP                               );
  tree->SetBranchAddress("Dst_MINIPCHI2"                         , &Dst_MINIPCHI2                           );
  tree->SetBranchAddress("Dst_P_Parallel"                        , &Dst_P_Parallel                          );
  tree->SetBranchAddress("Dst_P_Perp"                            , &Dst_P_Perp                              );
  tree->SetBranchAddress("Dst_TAU"                               , &Dst_TAU                                 );
  tree->SetBranchAddress("Dst_X_travelled"                       , &Dst_X_travelled                         );
  tree->SetBranchAddress("Dst_Y_travelled"                       , &Dst_Y_travelled                         );
  tree->SetBranchAddress("Dst_Z_travelled"                       , &Dst_Z_travelled                         );
  tree->SetBranchAddress("Dst_P"                                 , &Dst_P                                   );
  tree->SetBranchAddress("Dst_PT"                                , &Dst_PT                                  );
  tree->SetBranchAddress("Dst_PE"                                , &Dst_PE                                  );
  tree->SetBranchAddress("Dst_PX"                                , &Dst_PX                                  );
  tree->SetBranchAddress("Dst_PY"                                , &Dst_PY                                  );
  tree->SetBranchAddress("Dst_PZ"                                , &Dst_PZ                                  );
  tree->SetBranchAddress("Dst_MM"                                , &Dst_MM                                  );
  tree->SetBranchAddress("Dst_MMERR"                             , &Dst_MMERR                               );
  tree->SetBranchAddress("Dst_M"                                 , &Dst_M                                   );
  tree->SetBranchAddress("Dst_L0Global_Dec"                      , &Dst_L0Global_Dec                        );
  tree->SetBranchAddress("Dst_L0Global_TIS"                      , &Dst_L0Global_TIS                        );
  tree->SetBranchAddress("Dst_L0Global_TOS"                      , &Dst_L0Global_TOS                        );
  tree->SetBranchAddress("Dst_Hlt1Global_Dec"                    , &Dst_Hlt1Global_Dec                      );
  tree->SetBranchAddress("Dst_Hlt1Global_TIS"                    , &Dst_Hlt1Global_TIS                      );
  tree->SetBranchAddress("Dst_Hlt1Global_TOS"                    , &Dst_Hlt1Global_TOS                      );
  tree->SetBranchAddress("Dst_Hlt1Phys_Dec"                      , &Dst_Hlt1Phys_Dec                        );
  tree->SetBranchAddress("Dst_Hlt1Phys_TIS"                      , &Dst_Hlt1Phys_TIS                        );
  tree->SetBranchAddress("Dst_Hlt1Phys_TOS"                      , &Dst_Hlt1Phys_TOS                        );
  tree->SetBranchAddress("Dst_Hlt2Global_Dec"                    , &Dst_Hlt2Global_Dec                      );
  tree->SetBranchAddress("Dst_Hlt2Global_TIS"                    , &Dst_Hlt2Global_TIS                      );
  tree->SetBranchAddress("Dst_Hlt2Global_TOS"                    , &Dst_Hlt2Global_TOS                      );
  tree->SetBranchAddress("Dst_Hlt2Phys_Dec"                      , &Dst_Hlt2Phys_Dec                        );
  tree->SetBranchAddress("Dst_Hlt2Phys_TIS"                      , &Dst_Hlt2Phys_TIS                        );
  tree->SetBranchAddress("Dst_Hlt2Phys_TOS"                      , &Dst_Hlt2Phys_TOS                        );
  tree->SetBranchAddress("Dst_L0HadronDecision_Dec"              , &Dst_L0HadronDecision_Dec                );
  tree->SetBranchAddress("Dst_L0HadronDecision_TIS"              , &Dst_L0HadronDecision_TIS                );
  tree->SetBranchAddress("Dst_L0HadronDecision_TOS"              , &Dst_L0HadronDecision_TOS                );
  tree->SetBranchAddress("Dst_L0ElectronDecision_Dec"            , &Dst_L0ElectronDecision_Dec              );
  tree->SetBranchAddress("Dst_L0ElectronDecision_TIS"            , &Dst_L0ElectronDecision_TIS              );
  tree->SetBranchAddress("Dst_L0ElectronDecision_TOS"            , &Dst_L0ElectronDecision_TOS              );
  tree->SetBranchAddress("Dst_L0PhotonDecision_Dec"              , &Dst_L0PhotonDecision_Dec                );
  tree->SetBranchAddress("Dst_L0PhotonDecision_TIS"              , &Dst_L0PhotonDecision_TIS                );
  tree->SetBranchAddress("Dst_L0PhotonDecision_TOS"              , &Dst_L0PhotonDecision_TOS                );
  tree->SetBranchAddress("Dst_L0MuonDecision_Dec"                , &Dst_L0MuonDecision_Dec                  );
  tree->SetBranchAddress("Dst_L0MuonDecision_TIS"                , &Dst_L0MuonDecision_TIS                  );
  tree->SetBranchAddress("Dst_L0MuonDecision_TOS"                , &Dst_L0MuonDecision_TOS                  );
  tree->SetBranchAddress("Dst_L0DiMuonDecision_Dec"              , &Dst_L0DiMuonDecision_Dec                );
  tree->SetBranchAddress("Dst_L0DiMuonDecision_TIS"              , &Dst_L0DiMuonDecision_TIS                );
  tree->SetBranchAddress("Dst_L0DiMuonDecision_TOS"              , &Dst_L0DiMuonDecision_TOS                );
  tree->SetBranchAddress("Dst_Hlt1TrackAllL0Decision_Dec"        , &Dst_Hlt1TrackAllL0Decision_Dec          );
  tree->SetBranchAddress("Dst_Hlt1TrackAllL0Decision_TIS"        , &Dst_Hlt1TrackAllL0Decision_TIS          );
  tree->SetBranchAddress("Dst_Hlt1TrackAllL0Decision_TOS"        , &Dst_Hlt1TrackAllL0Decision_TOS          );
  tree->SetBranchAddress("Dst_Hlt1TrackMuonDecision_Dec"         , &Dst_Hlt1TrackMuonDecision_Dec           );
  tree->SetBranchAddress("Dst_Hlt1TrackMuonDecision_TIS"         , &Dst_Hlt1TrackMuonDecision_TIS           );
  tree->SetBranchAddress("Dst_Hlt1TrackMuonDecision_TOS"         , &Dst_Hlt1TrackMuonDecision_TOS           );
  tree->SetBranchAddress("Dst_Hlt1CEPVeloCutDecision_Dec"        , &Dst_Hlt1CEPVeloCutDecision_Dec          );
  tree->SetBranchAddress("Dst_Hlt1CEPVeloCutDecision_TIS"        , &Dst_Hlt1CEPVeloCutDecision_TIS          );
  tree->SetBranchAddress("Dst_Hlt1CEPVeloCutDecision_TOS"        , &Dst_Hlt1CEPVeloCutDecision_TOS          );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingKPiDetachedDecision_Dec", &Dst_Hlt1CalibTrackingKPiDetachedDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingKPiDetachedDecision_TIS", &Dst_Hlt1CalibTrackingKPiDetachedDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingKPiDetachedDecision_TOS", &Dst_Hlt1CalibTrackingKPiDetachedDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt1L0AnyDecision_Dec"             , &Dst_Hlt1L0AnyDecision_Dec               );
  tree->SetBranchAddress("Dst_Hlt1L0AnyDecision_TIS"             , &Dst_Hlt1L0AnyDecision_TIS               );
  tree->SetBranchAddress("Dst_Hlt1L0AnyDecision_TOS"             , &Dst_Hlt1L0AnyDecision_TOS               );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingKPiDecision_Dec"  , &Dst_Hlt1CalibTrackingKPiDecision_Dec    );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingKPiDecision_TIS"  , &Dst_Hlt1CalibTrackingKPiDecision_TIS    );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingKPiDecision_TOS"  , &Dst_Hlt1CalibTrackingKPiDecision_TOS    );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingKKDecision_Dec"   , &Dst_Hlt1CalibTrackingKKDecision_Dec     );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingKKDecision_TIS"   , &Dst_Hlt1CalibTrackingKKDecision_TIS     );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingKKDecision_TOS"   , &Dst_Hlt1CalibTrackingKKDecision_TOS     );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingPiPiDecision_Dec" , &Dst_Hlt1CalibTrackingPiPiDecision_Dec   );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingPiPiDecision_TIS" , &Dst_Hlt1CalibTrackingPiPiDecision_TIS   );
  tree->SetBranchAddress("Dst_Hlt1CalibTrackingPiPiDecision_TOS" , &Dst_Hlt1CalibTrackingPiPiDecision_TOS   );
  tree->SetBranchAddress("Dst_Hlt1B2GammaGammaDecision_Dec"      , &Dst_Hlt1B2GammaGammaDecision_Dec        );
  tree->SetBranchAddress("Dst_Hlt1B2GammaGammaDecision_TIS"      , &Dst_Hlt1B2GammaGammaDecision_TIS        );
  tree->SetBranchAddress("Dst_Hlt1B2GammaGammaDecision_TOS"      , &Dst_Hlt1B2GammaGammaDecision_TOS        );
  tree->SetBranchAddress("Dst_Hlt1B2HH_LTUNB_KKDecision_Dec"     , &Dst_Hlt1B2HH_LTUNB_KKDecision_Dec       );
  tree->SetBranchAddress("Dst_Hlt1B2HH_LTUNB_KKDecision_TIS"     , &Dst_Hlt1B2HH_LTUNB_KKDecision_TIS       );
  tree->SetBranchAddress("Dst_Hlt1B2HH_LTUNB_KKDecision_TOS"     , &Dst_Hlt1B2HH_LTUNB_KKDecision_TOS       );
  tree->SetBranchAddress("Dst_Hlt1B2HH_LTUNB_KPiDecision_Dec"    , &Dst_Hlt1B2HH_LTUNB_KPiDecision_Dec      );
  tree->SetBranchAddress("Dst_Hlt1B2HH_LTUNB_KPiDecision_TIS"    , &Dst_Hlt1B2HH_LTUNB_KPiDecision_TIS      );
  tree->SetBranchAddress("Dst_Hlt1B2HH_LTUNB_KPiDecision_TOS"    , &Dst_Hlt1B2HH_LTUNB_KPiDecision_TOS      );
  tree->SetBranchAddress("Dst_Hlt1B2HH_LTUNB_PiPiDecision_Dec"   , &Dst_Hlt1B2HH_LTUNB_PiPiDecision_Dec     );
  tree->SetBranchAddress("Dst_Hlt1B2HH_LTUNB_PiPiDecision_TIS"   , &Dst_Hlt1B2HH_LTUNB_PiPiDecision_TIS     );
  tree->SetBranchAddress("Dst_Hlt1B2HH_LTUNB_PiPiDecision_TOS"   , &Dst_Hlt1B2HH_LTUNB_PiPiDecision_TOS     );
  tree->SetBranchAddress("Dst_Hlt1B2PhiGamma_LTUNBDecision_Dec"  , &Dst_Hlt1B2PhiGamma_LTUNBDecision_Dec    );
  tree->SetBranchAddress("Dst_Hlt1B2PhiGamma_LTUNBDecision_TIS"  , &Dst_Hlt1B2PhiGamma_LTUNBDecision_TIS    );
  tree->SetBranchAddress("Dst_Hlt1B2PhiGamma_LTUNBDecision_TOS"  , &Dst_Hlt1B2PhiGamma_LTUNBDecision_TOS    );
  tree->SetBranchAddress("Dst_Hlt1B2PhiPhi_LTUNBDecision_Dec"    , &Dst_Hlt1B2PhiPhi_LTUNBDecision_Dec      );
  tree->SetBranchAddress("Dst_Hlt1B2PhiPhi_LTUNBDecision_TIS"    , &Dst_Hlt1B2PhiPhi_LTUNBDecision_TIS      );
  tree->SetBranchAddress("Dst_Hlt1B2PhiPhi_LTUNBDecision_TOS"    , &Dst_Hlt1B2PhiPhi_LTUNBDecision_TOS      );
  tree->SetBranchAddress("Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TOS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_Dec", &Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_Dec);
  tree->SetBranchAddress("Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TIS", &Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TIS);
  tree->SetBranchAddress("Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TOS", &Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TOS);
  tree->SetBranchAddress("D0_BPVVDZ"                             , &D0_BPVVDZ                               );
  tree->SetBranchAddress("D0_DIRA_OWNPV"                         , &D0_DIRA_OWNPV                           );
  tree->SetBranchAddress("D0_ENDVERTEX_CHI2"                     , &D0_ENDVERTEX_CHI2                       );
  tree->SetBranchAddress("D0_FD_CHI2"                            , &D0_FD_CHI2                              );
  tree->SetBranchAddress("D0_MINIP"                              , &D0_MINIP                                );
  tree->SetBranchAddress("D0_MINIPCHI2"                          , &D0_MINIPCHI2                            );
  tree->SetBranchAddress("D0_P_Parallel"                         , &D0_P_Parallel                           );
  tree->SetBranchAddress("D0_P_Perp"                             , &D0_P_Perp                               );
  tree->SetBranchAddress("D0_TAU"                                , &D0_TAU                                  );
  tree->SetBranchAddress("D0_X_travelled"                        , &D0_X_travelled                          );
  tree->SetBranchAddress("D0_Y_travelled"                        , &D0_Y_travelled                          );
  tree->SetBranchAddress("D0_Z_travelled"                        , &D0_Z_travelled                          );
  tree->SetBranchAddress("D0_CosTheta"                           , &D0_CosTheta                             );
  tree->SetBranchAddress("D0_P"                                  , &D0_P                                    );
  tree->SetBranchAddress("D0_PT"                                 , &D0_PT                                   );
  tree->SetBranchAddress("D0_PE"                                 , &D0_PE                                   );
  tree->SetBranchAddress("D0_PX"                                 , &D0_PX                                   );
  tree->SetBranchAddress("D0_PY"                                 , &D0_PY                                   );
  tree->SetBranchAddress("D0_PZ"                                 , &D0_PZ                                   );
  tree->SetBranchAddress("D0_MM"                                 , &D0_MM                                   );
  tree->SetBranchAddress("D0_MMERR"                              , &D0_MMERR                                );
  tree->SetBranchAddress("D0_M"                                  , &D0_M                                    );
  tree->SetBranchAddress("Kminus_BPVVDZ"                         , &Kminus_BPVVDZ                           );
  tree->SetBranchAddress("Kminus_DIRA_OWNPV"                     , &Kminus_DIRA_OWNPV                       );
  tree->SetBranchAddress("Kminus_ENDVERTEX_CHI2"                 , &Kminus_ENDVERTEX_CHI2                   );
  tree->SetBranchAddress("Kminus_FD_CHI2"                        , &Kminus_FD_CHI2                          );
  tree->SetBranchAddress("Kminus_MINIP"                          , &Kminus_MINIP                            );
  tree->SetBranchAddress("Kminus_MINIPCHI2"                      , &Kminus_MINIPCHI2                        );
  tree->SetBranchAddress("Kminus_P_Parallel"                     , &Kminus_P_Parallel                       );
  tree->SetBranchAddress("Kminus_P_Perp"                         , &Kminus_P_Perp                           );
  tree->SetBranchAddress("Kminus_TAU"                            , &Kminus_TAU                              );
  tree->SetBranchAddress("Kminus_X_travelled"                    , &Kminus_X_travelled                      );
  tree->SetBranchAddress("Kminus_Y_travelled"                    , &Kminus_Y_travelled                      );
  tree->SetBranchAddress("Kminus_Z_travelled"                    , &Kminus_Z_travelled                      );
  tree->SetBranchAddress("Kminus_CosTheta"                       , &Kminus_CosTheta                         );
  tree->SetBranchAddress("Kminus_P"                              , &Kminus_P                                );
  tree->SetBranchAddress("Kminus_PT"                             , &Kminus_PT                               );
  tree->SetBranchAddress("Kminus_PE"                             , &Kminus_PE                               );
  tree->SetBranchAddress("Kminus_PX"                             , &Kminus_PX                               );
  tree->SetBranchAddress("Kminus_PY"                             , &Kminus_PY                               );
  tree->SetBranchAddress("Kminus_PZ"                             , &Kminus_PZ                               );
  tree->SetBranchAddress("Kminus_M"                              , &Kminus_M                                );
  tree->SetBranchAddress("piplus_BPVVDZ"                         , &piplus_BPVVDZ                           );
  tree->SetBranchAddress("piplus_DIRA_OWNPV"                     , &piplus_DIRA_OWNPV                       );
  tree->SetBranchAddress("piplus_ENDVERTEX_CHI2"                 , &piplus_ENDVERTEX_CHI2                   );
  tree->SetBranchAddress("piplus_FD_CHI2"                        , &piplus_FD_CHI2                          );
  tree->SetBranchAddress("piplus_MINIP"                          , &piplus_MINIP                            );
  tree->SetBranchAddress("piplus_MINIPCHI2"                      , &piplus_MINIPCHI2                        );
  tree->SetBranchAddress("piplus_P_Parallel"                     , &piplus_P_Parallel                       );
  tree->SetBranchAddress("piplus_P_Perp"                         , &piplus_P_Perp                           );
  tree->SetBranchAddress("piplus_TAU"                            , &piplus_TAU                              );
  tree->SetBranchAddress("piplus_X_travelled"                    , &piplus_X_travelled                      );
  tree->SetBranchAddress("piplus_Y_travelled"                    , &piplus_Y_travelled                      );
  tree->SetBranchAddress("piplus_Z_travelled"                    , &piplus_Z_travelled                      );
  tree->SetBranchAddress("piplus_CosTheta"                       , &piplus_CosTheta                         );
  tree->SetBranchAddress("piplus_P"                              , &piplus_P                                );
  tree->SetBranchAddress("piplus_PT"                             , &piplus_PT                               );
  tree->SetBranchAddress("piplus_PE"                             , &piplus_PE                               );
  tree->SetBranchAddress("piplus_PX"                             , &piplus_PX                               );
  tree->SetBranchAddress("piplus_PY"                             , &piplus_PY                               );
  tree->SetBranchAddress("piplus_PZ"                             , &piplus_PZ                               );
  tree->SetBranchAddress("piplus_M"                              , &piplus_M                                );
  tree->SetBranchAddress("piplus0_BPVVDZ"                        , &piplus0_BPVVDZ                          );
  tree->SetBranchAddress("piplus0_DIRA_OWNPV"                    , &piplus0_DIRA_OWNPV                      );
  tree->SetBranchAddress("piplus0_ENDVERTEX_CHI2"                , &piplus0_ENDVERTEX_CHI2                  );
  tree->SetBranchAddress("piplus0_FD_CHI2"                       , &piplus0_FD_CHI2                         );
  tree->SetBranchAddress("piplus0_MINIP"                         , &piplus0_MINIP                           );
  tree->SetBranchAddress("piplus0_MINIPCHI2"                     , &piplus0_MINIPCHI2                       );
  tree->SetBranchAddress("piplus0_P_Parallel"                    , &piplus0_P_Parallel                      );
  tree->SetBranchAddress("piplus0_P_Perp"                        , &piplus0_P_Perp                          );
  tree->SetBranchAddress("piplus0_TAU"                           , &piplus0_TAU                             );
  tree->SetBranchAddress("piplus0_X_travelled"                   , &piplus0_X_travelled                     );
  tree->SetBranchAddress("piplus0_Y_travelled"                   , &piplus0_Y_travelled                     );
  tree->SetBranchAddress("piplus0_Z_travelled"                   , &piplus0_Z_travelled                     );
  tree->SetBranchAddress("piplus0_CosTheta"                      , &piplus0_CosTheta                        );
  tree->SetBranchAddress("piplus0_P"                             , &piplus0_P                               );
  tree->SetBranchAddress("piplus0_PT"                            , &piplus0_PT                              );
  tree->SetBranchAddress("piplus0_PE"                            , &piplus0_PE                              );
  tree->SetBranchAddress("piplus0_PX"                            , &piplus0_PX                              );
  tree->SetBranchAddress("piplus0_PY"                            , &piplus0_PY                              );
  tree->SetBranchAddress("piplus0_PZ"                            , &piplus0_PZ                              );
  tree->SetBranchAddress("piplus0_M"                             , &piplus0_M                               );
  tree->SetBranchAddress("nCandidate"                            , &nCandidate                              );
  tree->SetBranchAddress("totCandidates"                         , &totCandidates                           );
  tree->SetBranchAddress("EventInSequence"                       , &EventInSequence                         );
  tree->SetBranchAddress("runNumber"                             , &runNumber                               );
  tree->SetBranchAddress("eventNumber"                           , &eventNumber                             );
  tree->SetBranchAddress("BCID"                                  , &BCID                                    );
  tree->SetBranchAddress("BCType"                                , &BCType                                  );
  tree->SetBranchAddress("OdinTCK"                               , &OdinTCK                                 );
  tree->SetBranchAddress("L0DUTCK"                               , &L0DUTCK                                 );
  tree->SetBranchAddress("HLT1TCK"                               , &HLT1TCK                                 );
  tree->SetBranchAddress("HLT2TCK"                               , &HLT2TCK                                 );
  tree->SetBranchAddress("GpsTime"                               , &GpsTime                                 );
  tree->SetBranchAddress("Polarity"                              , &Polarity                                );
  tree->SetBranchAddress("nPVs"                                  , &nPVs                                    );
  tree->SetBranchAddress("nTracks"                               , &nTracks                                 );
  tree->SetBranchAddress("nLongTracks"                           , &nLongTracks                             );
  tree->SetBranchAddress("nDownstreamTracks"                     , &nDownstreamTracks                       );
  tree->SetBranchAddress("nUpstreamTracks"                       , &nUpstreamTracks                         );
  tree->SetBranchAddress("nVeloTracks"                           , &nVeloTracks                             );
  tree->SetBranchAddress("nTTracks"                              , &nTTracks                                );
  tree->SetBranchAddress("nBackTracks"                           , &nBackTracks                             );
  tree->SetBranchAddress("nRich1Hits"                            , &nRich1Hits                              );
  tree->SetBranchAddress("nRich2Hits"                            , &nRich2Hits                              );
  tree->SetBranchAddress("nVeloClusters"                         , &nVeloClusters                           );
  tree->SetBranchAddress("nITClusters"                           , &nITClusters                             );
  tree->SetBranchAddress("nTTClusters"                           , &nTTClusters                             );
  tree->SetBranchAddress("nOTClusters"                           , &nOTClusters                             );
  tree->SetBranchAddress("nSPDHits"                              , &nSPDHits                                );
  tree->SetBranchAddress("nMuonCoordsS0"                         , &nMuonCoordsS0                           );
  tree->SetBranchAddress("nMuonCoordsS1"                         , &nMuonCoordsS1                           );
  tree->SetBranchAddress("nMuonCoordsS2"                         , &nMuonCoordsS2                           );
  tree->SetBranchAddress("nMuonCoordsS3"                         , &nMuonCoordsS3                           );
  tree->SetBranchAddress("nMuonCoordsS4"                         , &nMuonCoordsS4                           );
  tree->SetBranchAddress("nMuonTracks"                           , &nMuonTracks                             );
}

void Dst2D0pi::Variables_Analysis::setOutputBranches(TTree *tree) {
  tree->Branch("itype"                                 , &itype                                   );
  tree->Branch("sqrts"                                 , &sqrts                                   );
  tree->Branch("evname"                                , &evname                                  );
  tree->Branch("year"                                  , &year                                    );

  tree->Branch("Dst_BPVVDZ"                            , &Dst_BPVVDZ                              , "Dst_BPVVDZ/D"                          );
  tree->Branch("Dst_DIRA_OWNPV"                        , &Dst_DIRA_OWNPV                          , "Dst_DIRA_OWNPV/D"                      );
  tree->Branch("Dst_ENDVERTEX_CHI2"                    , &Dst_ENDVERTEX_CHI2                      , "Dst_ENDVERTEX_CHI2/D"                  );
  tree->Branch("Dst_FD_CHI2"                           , &Dst_FD_CHI2                             , "Dst_FD_CHI2/D"                         );
  tree->Branch("Dst_MINIP"                             , &Dst_MINIP                               , "Dst_MINIP/D"                           );
  tree->Branch("Dst_MINIPCHI2"                         , &Dst_MINIPCHI2                           , "Dst_MINIPCHI2/D"                       );
  tree->Branch("Dst_P_Parallel"                        , &Dst_P_Parallel                          , "Dst_P_Parallel/D"                      );
  tree->Branch("Dst_P_Perp"                            , &Dst_P_Perp                              , "Dst_P_Perp/D"                          );
  tree->Branch("Dst_TAU"                               , &Dst_TAU                                 , "Dst_TAU/D"                             );
  tree->Branch("Dst_X_travelled"                       , &Dst_X_travelled                         , "Dst_X_travelled/D"                     );
  tree->Branch("Dst_Y_travelled"                       , &Dst_Y_travelled                         , "Dst_Y_travelled/D"                     );
  tree->Branch("Dst_Z_travelled"                       , &Dst_Z_travelled                         , "Dst_Z_travelled/D"                     );
  tree->Branch("Dst_P"                                 , &Dst_P                                   , "Dst_P/D"                               );
  tree->Branch("Dst_PT"                                , &Dst_PT                                  , "Dst_PT/D"                              );
  tree->Branch("Dst_PE"                                , &Dst_PE                                  , "Dst_PE/D"                              );
  tree->Branch("Dst_PX"                                , &Dst_PX                                  , "Dst_PX/D"                              );
  tree->Branch("Dst_PY"                                , &Dst_PY                                  , "Dst_PY/D"                              );
  tree->Branch("Dst_PZ"                                , &Dst_PZ                                  , "Dst_PZ/D"                              );
  tree->Branch("Dst_MM"                                , &Dst_MM                                  , "Dst_MM/D"                              );
  tree->Branch("Dst_MMERR"                             , &Dst_MMERR                               , "Dst_MMERR/D"                           );
  tree->Branch("Dst_M"                                 , &Dst_M                                   , "Dst_M/D"                               );
  tree->Branch("Dst_L0Global_Dec"                      , &Dst_L0Global_Dec                        , "Dst_L0Global_Dec/O"                    );
  tree->Branch("Dst_L0Global_TIS"                      , &Dst_L0Global_TIS                        , "Dst_L0Global_TIS/O"                    );
  tree->Branch("Dst_L0Global_TOS"                      , &Dst_L0Global_TOS                        , "Dst_L0Global_TOS/O"                    );
  tree->Branch("Dst_Hlt1Global_Dec"                    , &Dst_Hlt1Global_Dec                      , "Dst_Hlt1Global_Dec/O"                  );
  tree->Branch("Dst_Hlt1Global_TIS"                    , &Dst_Hlt1Global_TIS                      , "Dst_Hlt1Global_TIS/O"                  );
  tree->Branch("Dst_Hlt1Global_TOS"                    , &Dst_Hlt1Global_TOS                      , "Dst_Hlt1Global_TOS/O"                  );
  tree->Branch("Dst_Hlt1Phys_Dec"                      , &Dst_Hlt1Phys_Dec                        , "Dst_Hlt1Phys_Dec/O"                    );
  tree->Branch("Dst_Hlt1Phys_TIS"                      , &Dst_Hlt1Phys_TIS                        , "Dst_Hlt1Phys_TIS/O"                    );
  tree->Branch("Dst_Hlt1Phys_TOS"                      , &Dst_Hlt1Phys_TOS                        , "Dst_Hlt1Phys_TOS/O"                    );
  tree->Branch("Dst_Hlt2Global_Dec"                    , &Dst_Hlt2Global_Dec                      , "Dst_Hlt2Global_Dec/O"                  );
  tree->Branch("Dst_Hlt2Global_TIS"                    , &Dst_Hlt2Global_TIS                      , "Dst_Hlt2Global_TIS/O"                  );
  tree->Branch("Dst_Hlt2Global_TOS"                    , &Dst_Hlt2Global_TOS                      , "Dst_Hlt2Global_TOS/O"                  );
  tree->Branch("Dst_Hlt2Phys_Dec"                      , &Dst_Hlt2Phys_Dec                        , "Dst_Hlt2Phys_Dec/O"                    );
  tree->Branch("Dst_Hlt2Phys_TIS"                      , &Dst_Hlt2Phys_TIS                        , "Dst_Hlt2Phys_TIS/O"                    );
  tree->Branch("Dst_Hlt2Phys_TOS"                      , &Dst_Hlt2Phys_TOS                        , "Dst_Hlt2Phys_TOS/O"                    );
  tree->Branch("Dst_L0HadronDecision_Dec"              , &Dst_L0HadronDecision_Dec                , "Dst_L0HadronDecision_Dec/O"            );
  tree->Branch("Dst_L0HadronDecision_TIS"              , &Dst_L0HadronDecision_TIS                , "Dst_L0HadronDecision_TIS/O"            );
  tree->Branch("Dst_L0HadronDecision_TOS"              , &Dst_L0HadronDecision_TOS                , "Dst_L0HadronDecision_TOS/O"            );
  tree->Branch("Dst_L0ElectronDecision_Dec"            , &Dst_L0ElectronDecision_Dec              , "Dst_L0ElectronDecision_Dec/O"          );
  tree->Branch("Dst_L0ElectronDecision_TIS"            , &Dst_L0ElectronDecision_TIS              , "Dst_L0ElectronDecision_TIS/O"          );
  tree->Branch("Dst_L0ElectronDecision_TOS"            , &Dst_L0ElectronDecision_TOS              , "Dst_L0ElectronDecision_TOS/O"          );
  tree->Branch("Dst_L0PhotonDecision_Dec"              , &Dst_L0PhotonDecision_Dec                , "Dst_L0PhotonDecision_Dec/O"            );
  tree->Branch("Dst_L0PhotonDecision_TIS"              , &Dst_L0PhotonDecision_TIS                , "Dst_L0PhotonDecision_TIS/O"            );
  tree->Branch("Dst_L0PhotonDecision_TOS"              , &Dst_L0PhotonDecision_TOS                , "Dst_L0PhotonDecision_TOS/O"            );
  tree->Branch("Dst_L0MuonDecision_Dec"                , &Dst_L0MuonDecision_Dec                  , "Dst_L0MuonDecision_Dec/O"              );
  tree->Branch("Dst_L0MuonDecision_TIS"                , &Dst_L0MuonDecision_TIS                  , "Dst_L0MuonDecision_TIS/O"              );
  tree->Branch("Dst_L0MuonDecision_TOS"                , &Dst_L0MuonDecision_TOS                  , "Dst_L0MuonDecision_TOS/O"              );
  tree->Branch("Dst_L0DiMuonDecision_Dec"              , &Dst_L0DiMuonDecision_Dec                , "Dst_L0DiMuonDecision_Dec/O"            );
  tree->Branch("Dst_L0DiMuonDecision_TIS"              , &Dst_L0DiMuonDecision_TIS                , "Dst_L0DiMuonDecision_TIS/O"            );
  tree->Branch("Dst_L0DiMuonDecision_TOS"              , &Dst_L0DiMuonDecision_TOS                , "Dst_L0DiMuonDecision_TOS/O"            );
  tree->Branch("Dst_Hlt1TrackAllL0Decision_Dec"        , &Dst_Hlt1TrackAllL0Decision_Dec          , "Dst_Hlt1TrackAllL0Decision_Dec/O"      );
  tree->Branch("Dst_Hlt1TrackAllL0Decision_TIS"        , &Dst_Hlt1TrackAllL0Decision_TIS          , "Dst_Hlt1TrackAllL0Decision_TIS/O"      );
  tree->Branch("Dst_Hlt1TrackAllL0Decision_TOS"        , &Dst_Hlt1TrackAllL0Decision_TOS          , "Dst_Hlt1TrackAllL0Decision_TOS/O"      );
  tree->Branch("Dst_Hlt1TrackMuonDecision_Dec"         , &Dst_Hlt1TrackMuonDecision_Dec           , "Dst_Hlt1TrackMuonDecision_Dec/O"       );
  tree->Branch("Dst_Hlt1TrackMuonDecision_TIS"         , &Dst_Hlt1TrackMuonDecision_TIS           , "Dst_Hlt1TrackMuonDecision_TIS/O"       );
  tree->Branch("Dst_Hlt1TrackMuonDecision_TOS"         , &Dst_Hlt1TrackMuonDecision_TOS           , "Dst_Hlt1TrackMuonDecision_TOS/O"       );
  tree->Branch("Dst_Hlt1CEPVeloCutDecision_Dec"        , &Dst_Hlt1CEPVeloCutDecision_Dec          , "Dst_Hlt1CEPVeloCutDecision_Dec/O"      );
  tree->Branch("Dst_Hlt1CEPVeloCutDecision_TIS"        , &Dst_Hlt1CEPVeloCutDecision_TIS          , "Dst_Hlt1CEPVeloCutDecision_TIS/O"      );
  tree->Branch("Dst_Hlt1CEPVeloCutDecision_TOS"        , &Dst_Hlt1CEPVeloCutDecision_TOS          , "Dst_Hlt1CEPVeloCutDecision_TOS/O"      );
  tree->Branch("Dst_Hlt1CalibTrackingKPiDetachedDecision_Dec", &Dst_Hlt1CalibTrackingKPiDetachedDecision_Dec, "Dst_Hlt1CalibTrackingKPiDetachedDecision_Dec/O");
  tree->Branch("Dst_Hlt1CalibTrackingKPiDetachedDecision_TIS", &Dst_Hlt1CalibTrackingKPiDetachedDecision_TIS, "Dst_Hlt1CalibTrackingKPiDetachedDecision_TIS/O");
  tree->Branch("Dst_Hlt1CalibTrackingKPiDetachedDecision_TOS", &Dst_Hlt1CalibTrackingKPiDetachedDecision_TOS, "Dst_Hlt1CalibTrackingKPiDetachedDecision_TOS/O");
  tree->Branch("Dst_Hlt1L0AnyDecision_Dec"             , &Dst_Hlt1L0AnyDecision_Dec               , "Dst_Hlt1L0AnyDecision_Dec/O"           );
  tree->Branch("Dst_Hlt1L0AnyDecision_TIS"             , &Dst_Hlt1L0AnyDecision_TIS               , "Dst_Hlt1L0AnyDecision_TIS/O"           );
  tree->Branch("Dst_Hlt1L0AnyDecision_TOS"             , &Dst_Hlt1L0AnyDecision_TOS               , "Dst_Hlt1L0AnyDecision_TOS/O"           );
  tree->Branch("Dst_Hlt1CalibTrackingKPiDecision_Dec"  , &Dst_Hlt1CalibTrackingKPiDecision_Dec    , "Dst_Hlt1CalibTrackingKPiDecision_Dec/O");
  tree->Branch("Dst_Hlt1CalibTrackingKPiDecision_TIS"  , &Dst_Hlt1CalibTrackingKPiDecision_TIS    , "Dst_Hlt1CalibTrackingKPiDecision_TIS/O");
  tree->Branch("Dst_Hlt1CalibTrackingKPiDecision_TOS"  , &Dst_Hlt1CalibTrackingKPiDecision_TOS    , "Dst_Hlt1CalibTrackingKPiDecision_TOS/O");
  tree->Branch("Dst_Hlt1CalibTrackingKKDecision_Dec"   , &Dst_Hlt1CalibTrackingKKDecision_Dec     , "Dst_Hlt1CalibTrackingKKDecision_Dec/O" );
  tree->Branch("Dst_Hlt1CalibTrackingKKDecision_TIS"   , &Dst_Hlt1CalibTrackingKKDecision_TIS     , "Dst_Hlt1CalibTrackingKKDecision_TIS/O" );
  tree->Branch("Dst_Hlt1CalibTrackingKKDecision_TOS"   , &Dst_Hlt1CalibTrackingKKDecision_TOS     , "Dst_Hlt1CalibTrackingKKDecision_TOS/O" );
  tree->Branch("Dst_Hlt1CalibTrackingPiPiDecision_Dec" , &Dst_Hlt1CalibTrackingPiPiDecision_Dec   , "Dst_Hlt1CalibTrackingPiPiDecision_Dec/O");
  tree->Branch("Dst_Hlt1CalibTrackingPiPiDecision_TIS" , &Dst_Hlt1CalibTrackingPiPiDecision_TIS   , "Dst_Hlt1CalibTrackingPiPiDecision_TIS/O");
  tree->Branch("Dst_Hlt1CalibTrackingPiPiDecision_TOS" , &Dst_Hlt1CalibTrackingPiPiDecision_TOS   , "Dst_Hlt1CalibTrackingPiPiDecision_TOS/O");
  tree->Branch("Dst_Hlt1B2GammaGammaDecision_Dec"      , &Dst_Hlt1B2GammaGammaDecision_Dec        , "Dst_Hlt1B2GammaGammaDecision_Dec/O"    );
  tree->Branch("Dst_Hlt1B2GammaGammaDecision_TIS"      , &Dst_Hlt1B2GammaGammaDecision_TIS        , "Dst_Hlt1B2GammaGammaDecision_TIS/O"    );
  tree->Branch("Dst_Hlt1B2GammaGammaDecision_TOS"      , &Dst_Hlt1B2GammaGammaDecision_TOS        , "Dst_Hlt1B2GammaGammaDecision_TOS/O"    );
  tree->Branch("Dst_Hlt1B2HH_LTUNB_KKDecision_Dec"     , &Dst_Hlt1B2HH_LTUNB_KKDecision_Dec       , "Dst_Hlt1B2HH_LTUNB_KKDecision_Dec/O"   );
  tree->Branch("Dst_Hlt1B2HH_LTUNB_KKDecision_TIS"     , &Dst_Hlt1B2HH_LTUNB_KKDecision_TIS       , "Dst_Hlt1B2HH_LTUNB_KKDecision_TIS/O"   );
  tree->Branch("Dst_Hlt1B2HH_LTUNB_KKDecision_TOS"     , &Dst_Hlt1B2HH_LTUNB_KKDecision_TOS       , "Dst_Hlt1B2HH_LTUNB_KKDecision_TOS/O"   );
  tree->Branch("Dst_Hlt1B2HH_LTUNB_KPiDecision_Dec"    , &Dst_Hlt1B2HH_LTUNB_KPiDecision_Dec      , "Dst_Hlt1B2HH_LTUNB_KPiDecision_Dec/O"  );
  tree->Branch("Dst_Hlt1B2HH_LTUNB_KPiDecision_TIS"    , &Dst_Hlt1B2HH_LTUNB_KPiDecision_TIS      , "Dst_Hlt1B2HH_LTUNB_KPiDecision_TIS/O"  );
  tree->Branch("Dst_Hlt1B2HH_LTUNB_KPiDecision_TOS"    , &Dst_Hlt1B2HH_LTUNB_KPiDecision_TOS      , "Dst_Hlt1B2HH_LTUNB_KPiDecision_TOS/O"  );
  tree->Branch("Dst_Hlt1B2HH_LTUNB_PiPiDecision_Dec"   , &Dst_Hlt1B2HH_LTUNB_PiPiDecision_Dec     , "Dst_Hlt1B2HH_LTUNB_PiPiDecision_Dec/O" );
  tree->Branch("Dst_Hlt1B2HH_LTUNB_PiPiDecision_TIS"   , &Dst_Hlt1B2HH_LTUNB_PiPiDecision_TIS     , "Dst_Hlt1B2HH_LTUNB_PiPiDecision_TIS/O" );
  tree->Branch("Dst_Hlt1B2HH_LTUNB_PiPiDecision_TOS"   , &Dst_Hlt1B2HH_LTUNB_PiPiDecision_TOS     , "Dst_Hlt1B2HH_LTUNB_PiPiDecision_TOS/O" );
  tree->Branch("Dst_Hlt1B2PhiGamma_LTUNBDecision_Dec"  , &Dst_Hlt1B2PhiGamma_LTUNBDecision_Dec    , "Dst_Hlt1B2PhiGamma_LTUNBDecision_Dec/O");
  tree->Branch("Dst_Hlt1B2PhiGamma_LTUNBDecision_TIS"  , &Dst_Hlt1B2PhiGamma_LTUNBDecision_TIS    , "Dst_Hlt1B2PhiGamma_LTUNBDecision_TIS/O");
  tree->Branch("Dst_Hlt1B2PhiGamma_LTUNBDecision_TOS"  , &Dst_Hlt1B2PhiGamma_LTUNBDecision_TOS    , "Dst_Hlt1B2PhiGamma_LTUNBDecision_TOS/O");
  tree->Branch("Dst_Hlt1B2PhiPhi_LTUNBDecision_Dec"    , &Dst_Hlt1B2PhiPhi_LTUNBDecision_Dec      , "Dst_Hlt1B2PhiPhi_LTUNBDecision_Dec/O"  );
  tree->Branch("Dst_Hlt1B2PhiPhi_LTUNBDecision_TIS"    , &Dst_Hlt1B2PhiPhi_LTUNBDecision_TIS      , "Dst_Hlt1B2PhiPhi_LTUNBDecision_TIS/O"  );
  tree->Branch("Dst_Hlt1B2PhiPhi_LTUNBDecision_TOS"    , &Dst_Hlt1B2PhiPhi_LTUNBDecision_TOS      , "Dst_Hlt1B2PhiPhi_LTUNBDecision_TOS/O"  );
  tree->Branch("Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadD02KPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadDpm2KKPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadDpm2KPiPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadDs2KKPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadDs2PiPiPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadDst_2D0Gamma_D02KPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadDst_2D0Pi0_D02KPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadDst_2D0Pi_D02K3Pi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadDst_2D0Pi_D02KPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadDst_2DsGamma_Ds2KKPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadLc2KPK_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadLc2KPPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadLc2PiPPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_Dec", &Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_Dec, "Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TIS", &Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TIS, "Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TOS", &Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TOS, "Dst_Hlt2CharmHadSigmac_2LcPi_XSecTurboDecision_TOS/O");
  tree->Branch("Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_Dec", &Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_Dec, "Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_Dec/O");
  tree->Branch("Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TIS", &Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TIS, "Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TIS/O");
  tree->Branch("Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TOS", &Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TOS, "Dst_Hlt2CharmHadXic02PKKPi_TurboDecision_TOS/O");
  tree->Branch("D0_BPVVDZ"                             , &D0_BPVVDZ                               , "D0_BPVVDZ/D"                           );
  tree->Branch("D0_DIRA_OWNPV"                         , &D0_DIRA_OWNPV                           , "D0_DIRA_OWNPV/D"                       );
  tree->Branch("D0_ENDVERTEX_CHI2"                     , &D0_ENDVERTEX_CHI2                       , "D0_ENDVERTEX_CHI2/D"                   );
  tree->Branch("D0_FD_CHI2"                            , &D0_FD_CHI2                              , "D0_FD_CHI2/D"                          );
  tree->Branch("D0_MINIP"                              , &D0_MINIP                                , "D0_MINIP/D"                            );
  tree->Branch("D0_MINIPCHI2"                          , &D0_MINIPCHI2                            , "D0_MINIPCHI2/D"                        );
  tree->Branch("D0_P_Parallel"                         , &D0_P_Parallel                           , "D0_P_Parallel/D"                       );
  tree->Branch("D0_P_Perp"                             , &D0_P_Perp                               , "D0_P_Perp/D"                           );
  tree->Branch("D0_TAU"                                , &D0_TAU                                  , "D0_TAU/D"                              );
  tree->Branch("D0_X_travelled"                        , &D0_X_travelled                          , "D0_X_travelled/D"                      );
  tree->Branch("D0_Y_travelled"                        , &D0_Y_travelled                          , "D0_Y_travelled/D"                      );
  tree->Branch("D0_Z_travelled"                        , &D0_Z_travelled                          , "D0_Z_travelled/D"                      );
  tree->Branch("D0_CosTheta"                           , &D0_CosTheta                             , "D0_CosTheta/D"                         );
  tree->Branch("D0_P"                                  , &D0_P                                    , "D0_P/D"                                );
  tree->Branch("D0_PT"                                 , &D0_PT                                   , "D0_PT/D"                               );
  tree->Branch("D0_PE"                                 , &D0_PE                                   , "D0_PE/D"                               );
  tree->Branch("D0_PX"                                 , &D0_PX                                   , "D0_PX/D"                               );
  tree->Branch("D0_PY"                                 , &D0_PY                                   , "D0_PY/D"                               );
  tree->Branch("D0_PZ"                                 , &D0_PZ                                   , "D0_PZ/D"                               );
  tree->Branch("D0_MM"                                 , &D0_MM                                   , "D0_MM/D"                               );
  tree->Branch("D0_MMERR"                              , &D0_MMERR                                , "D0_MMERR/D"                            );
  tree->Branch("D0_M"                                  , &D0_M                                    , "D0_M/D"                                );
  tree->Branch("Kminus_BPVVDZ"                         , &Kminus_BPVVDZ                           , "Kminus_BPVVDZ/D"                       );
  tree->Branch("Kminus_DIRA_OWNPV"                     , &Kminus_DIRA_OWNPV                       , "Kminus_DIRA_OWNPV/D"                   );
  tree->Branch("Kminus_ENDVERTEX_CHI2"                 , &Kminus_ENDVERTEX_CHI2                   , "Kminus_ENDVERTEX_CHI2/D"               );
  tree->Branch("Kminus_FD_CHI2"                        , &Kminus_FD_CHI2                          , "Kminus_FD_CHI2/D"                      );
  tree->Branch("Kminus_MINIP"                          , &Kminus_MINIP                            , "Kminus_MINIP/D"                        );
  tree->Branch("Kminus_MINIPCHI2"                      , &Kminus_MINIPCHI2                        , "Kminus_MINIPCHI2/D"                    );
  tree->Branch("Kminus_P_Parallel"                     , &Kminus_P_Parallel                       , "Kminus_P_Parallel/D"                   );
  tree->Branch("Kminus_P_Perp"                         , &Kminus_P_Perp                           , "Kminus_P_Perp/D"                       );
  tree->Branch("Kminus_TAU"                            , &Kminus_TAU                              , "Kminus_TAU/D"                          );
  tree->Branch("Kminus_X_travelled"                    , &Kminus_X_travelled                      , "Kminus_X_travelled/D"                  );
  tree->Branch("Kminus_Y_travelled"                    , &Kminus_Y_travelled                      , "Kminus_Y_travelled/D"                  );
  tree->Branch("Kminus_Z_travelled"                    , &Kminus_Z_travelled                      , "Kminus_Z_travelled/D"                  );
  tree->Branch("Kminus_CosTheta"                       , &Kminus_CosTheta                         , "Kminus_CosTheta/D"                     );
  tree->Branch("Kminus_P"                              , &Kminus_P                                , "Kminus_P/D"                            );
  tree->Branch("Kminus_PT"                             , &Kminus_PT                               , "Kminus_PT/D"                           );
  tree->Branch("Kminus_PE"                             , &Kminus_PE                               , "Kminus_PE/D"                           );
  tree->Branch("Kminus_PX"                             , &Kminus_PX                               , "Kminus_PX/D"                           );
  tree->Branch("Kminus_PY"                             , &Kminus_PY                               , "Kminus_PY/D"                           );
  tree->Branch("Kminus_PZ"                             , &Kminus_PZ                               , "Kminus_PZ/D"                           );
  tree->Branch("Kminus_M"                              , &Kminus_M                                , "Kminus_M/D"                            );
  tree->Branch("piplus_BPVVDZ"                         , &piplus_BPVVDZ                           , "piplus_BPVVDZ/D"                       );
  tree->Branch("piplus_DIRA_OWNPV"                     , &piplus_DIRA_OWNPV                       , "piplus_DIRA_OWNPV/D"                   );
  tree->Branch("piplus_ENDVERTEX_CHI2"                 , &piplus_ENDVERTEX_CHI2                   , "piplus_ENDVERTEX_CHI2/D"               );
  tree->Branch("piplus_FD_CHI2"                        , &piplus_FD_CHI2                          , "piplus_FD_CHI2/D"                      );
  tree->Branch("piplus_MINIP"                          , &piplus_MINIP                            , "piplus_MINIP/D"                        );
  tree->Branch("piplus_MINIPCHI2"                      , &piplus_MINIPCHI2                        , "piplus_MINIPCHI2/D"                    );
  tree->Branch("piplus_P_Parallel"                     , &piplus_P_Parallel                       , "piplus_P_Parallel/D"                   );
  tree->Branch("piplus_P_Perp"                         , &piplus_P_Perp                           , "piplus_P_Perp/D"                       );
  tree->Branch("piplus_TAU"                            , &piplus_TAU                              , "piplus_TAU/D"                          );
  tree->Branch("piplus_X_travelled"                    , &piplus_X_travelled                      , "piplus_X_travelled/D"                  );
  tree->Branch("piplus_Y_travelled"                    , &piplus_Y_travelled                      , "piplus_Y_travelled/D"                  );
  tree->Branch("piplus_Z_travelled"                    , &piplus_Z_travelled                      , "piplus_Z_travelled/D"                  );
  tree->Branch("piplus_CosTheta"                       , &piplus_CosTheta                         , "piplus_CosTheta/D"                     );
  tree->Branch("piplus_P"                              , &piplus_P                                , "piplus_P/D"                            );
  tree->Branch("piplus_PT"                             , &piplus_PT                               , "piplus_PT/D"                           );
  tree->Branch("piplus_PE"                             , &piplus_PE                               , "piplus_PE/D"                           );
  tree->Branch("piplus_PX"                             , &piplus_PX                               , "piplus_PX/D"                           );
  tree->Branch("piplus_PY"                             , &piplus_PY                               , "piplus_PY/D"                           );
  tree->Branch("piplus_PZ"                             , &piplus_PZ                               , "piplus_PZ/D"                           );
  tree->Branch("piplus_M"                              , &piplus_M                                , "piplus_M/D"                            );
  tree->Branch("piplus0_BPVVDZ"                        , &piplus0_BPVVDZ                          , "piplus0_BPVVDZ/D"                      );
  tree->Branch("piplus0_DIRA_OWNPV"                    , &piplus0_DIRA_OWNPV                      , "piplus0_DIRA_OWNPV/D"                  );
  tree->Branch("piplus0_ENDVERTEX_CHI2"                , &piplus0_ENDVERTEX_CHI2                  , "piplus0_ENDVERTEX_CHI2/D"              );
  tree->Branch("piplus0_FD_CHI2"                       , &piplus0_FD_CHI2                         , "piplus0_FD_CHI2/D"                     );
  tree->Branch("piplus0_MINIP"                         , &piplus0_MINIP                           , "piplus0_MINIP/D"                       );
  tree->Branch("piplus0_MINIPCHI2"                     , &piplus0_MINIPCHI2                       , "piplus0_MINIPCHI2/D"                   );
  tree->Branch("piplus0_P_Parallel"                    , &piplus0_P_Parallel                      , "piplus0_P_Parallel/D"                  );
  tree->Branch("piplus0_P_Perp"                        , &piplus0_P_Perp                          , "piplus0_P_Perp/D"                      );
  tree->Branch("piplus0_TAU"                           , &piplus0_TAU                             , "piplus0_TAU/D"                         );
  tree->Branch("piplus0_X_travelled"                   , &piplus0_X_travelled                     , "piplus0_X_travelled/D"                 );
  tree->Branch("piplus0_Y_travelled"                   , &piplus0_Y_travelled                     , "piplus0_Y_travelled/D"                 );
  tree->Branch("piplus0_Z_travelled"                   , &piplus0_Z_travelled                     , "piplus0_Z_travelled/D"                 );
  tree->Branch("piplus0_CosTheta"                      , &piplus0_CosTheta                        , "piplus0_CosTheta/D"                    );
  tree->Branch("piplus0_P"                             , &piplus0_P                               , "piplus0_P/D"                           );
  tree->Branch("piplus0_PT"                            , &piplus0_PT                              , "piplus0_PT/D"                          );
  tree->Branch("piplus0_PE"                            , &piplus0_PE                              , "piplus0_PE/D"                          );
  tree->Branch("piplus0_PX"                            , &piplus0_PX                              , "piplus0_PX/D"                          );
  tree->Branch("piplus0_PY"                            , &piplus0_PY                              , "piplus0_PY/D"                          );
  tree->Branch("piplus0_PZ"                            , &piplus0_PZ                              , "piplus0_PZ/D"                          );
  tree->Branch("piplus0_M"                             , &piplus0_M                               , "piplus0_M/D"                           );
  tree->Branch("nCandidate"                            , &nCandidate                              , "nCandidate/i"                          );
  tree->Branch("totCandidates"                         , &totCandidates                           , "totCandidates/l"                       );
  tree->Branch("EventInSequence"                       , &EventInSequence                         , "EventInSequence/l"                     );
  tree->Branch("runNumber"                             , &runNumber                               , "runNumber/i"                           );
  tree->Branch("eventNumber"                           , &eventNumber                             , "eventNumber/l"                         );
  tree->Branch("BCID"                                  , &BCID                                    , "BCID/i"                                );
  tree->Branch("BCType"                                , &BCType                                  , "BCType/I"                              );
  tree->Branch("OdinTCK"                               , &OdinTCK                                 , "OdinTCK/i"                             );
  tree->Branch("L0DUTCK"                               , &L0DUTCK                                 , "L0DUTCK/i"                             );
  tree->Branch("HLT1TCK"                               , &HLT1TCK                                 , "HLT1TCK/i"                             );
  tree->Branch("HLT2TCK"                               , &HLT2TCK                                 , "HLT2TCK/i"                             );
  tree->Branch("GpsTime"                               , &GpsTime                                 , "GpsTime/l"                             );
  tree->Branch("Polarity"                              , &Polarity                                , "Polarity/S"                            );
  tree->Branch("nPVs"                                  , &nPVs                                    , "nPVs/I"                                );
  tree->Branch("nTracks"                               , &nTracks                                 , "nTracks/I"                             );
  tree->Branch("nLongTracks"                           , &nLongTracks                             , "nLongTracks/I"                         );
  tree->Branch("nDownstreamTracks"                     , &nDownstreamTracks                       , "nDownstreamTracks/I"                   );
  tree->Branch("nUpstreamTracks"                       , &nUpstreamTracks                         , "nUpstreamTracks/I"                     );
  tree->Branch("nVeloTracks"                           , &nVeloTracks                             , "nVeloTracks/I"                         );
  tree->Branch("nTTracks"                              , &nTTracks                                , "nTTracks/I"                            );
  tree->Branch("nBackTracks"                           , &nBackTracks                             , "nBackTracks/I"                         );
  tree->Branch("nRich1Hits"                            , &nRich1Hits                              , "nRich1Hits/I"                          );
  tree->Branch("nRich2Hits"                            , &nRich2Hits                              , "nRich2Hits/I"                          );
  tree->Branch("nVeloClusters"                         , &nVeloClusters                           , "nVeloClusters/I"                       );
  tree->Branch("nITClusters"                           , &nITClusters                             , "nITClusters/I"                         );
  tree->Branch("nTTClusters"                           , &nTTClusters                             , "nTTClusters/I"                         );
  tree->Branch("nOTClusters"                           , &nOTClusters                             , "nOTClusters/I"                         );
  tree->Branch("nSPDHits"                              , &nSPDHits                                , "nSPDHits/I"                            );
  tree->Branch("nMuonCoordsS0"                         , &nMuonCoordsS0                           , "nMuonCoordsS0/I"                       );
  tree->Branch("nMuonCoordsS1"                         , &nMuonCoordsS1                           , "nMuonCoordsS1/I"                       );
  tree->Branch("nMuonCoordsS2"                         , &nMuonCoordsS2                           , "nMuonCoordsS2/I"                       );
  tree->Branch("nMuonCoordsS3"                         , &nMuonCoordsS3                           , "nMuonCoordsS3/I"                       );
  tree->Branch("nMuonCoordsS4"                         , &nMuonCoordsS4                           , "nMuonCoordsS4/I"                       );
  tree->Branch("nMuonTracks"                           , &nMuonTracks                             , "nMuonTracks/I"                         );
}
